{
	"id": "1e7324990a0d8035f3f1a17e26ea4ce1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\nimport \"./IERC20.sol\";\n\ncontract ERC20 is IERC20 {\n    mapping (address => uint256) private balances;\n    mapping (address => mapping (address => uint256)) private allowances;\n    uint256 private totalSupplyToken;\n    string private tokenName;\n    string private tokenSymbol;\n    \n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return tokenName;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return tokenSymbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overloaded;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return totalSupplyToken;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        doTransfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        doApprove(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n\n        doTransfer(sender, recipient, amount);\n\n        uint256 currentAllowance = allowances[sender][recipient];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        doApprove(sender, recipient, currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        doApprove(msg.sender, spender, allowances[msg.sender][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = allowances[msg.sender][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        doApprove(msg.sender, spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function doTransfer(address sender, address recipient, uint256 amount) internal virtual {\n\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        uint256 senderBalance = balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        balances[sender] = senderBalance - amount;\n        balances[recipient] += amount;\n\n       emit Transfer(sender, recipient, amount); \n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function mint(address account, uint256 amount) internal virtual {\n\n        require(account != address(0), \"ERC20: mint to the zero address\");\n        totalSupplyToken += amount;\n        balances[account] += amount;\n\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function burn(address account, uint256 amount) internal virtual {\n\n        require(account != address(0), \"ERC20: burn from the zero address\");\n        uint256 accountBalance = balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        balances[account] = accountBalance - amount;\n        totalSupplyToken -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function doApprove(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n}"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ninterface IERC20 {\n     /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":89:8048  contract ERC20 is IERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":89:8048  contract ERC20 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20.sol\":409:502  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2488:2653  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1478:1588  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3120:3530  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1336:1418  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3925:4133  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1646:1770  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":615:712  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":4620:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1973:2144  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2202:2350  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":409:502  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"contracts/ERC20.sol\":454:467  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":486:495  tokenName */\n      0x03\n        /* \"contracts/ERC20.sol\":479:495  return tokenName */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":409:502  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2488:2653  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"contracts/ERC20.sol\":2571:2575  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2587:2625  doApprove(msg.sender, spender, amount) */\n      tag_71\n        /* \"contracts/ERC20.sol\":2597:2607  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":2609:2616  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":2618:2624  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":2587:2596  doApprove */\n      tag_72\n        /* \"contracts/ERC20.sol\":2587:2625  doApprove(msg.sender, spender, amount) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/ERC20.sol\":2642:2646  true */\n      0x01\n        /* \"contracts/ERC20.sol\":2635:2646  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2488:2653  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1478:1588  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"contracts/ERC20.sol\":1539:1546  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":1565:1581  totalSupplyToken */\n      sload(0x02)\n        /* \"contracts/ERC20.sol\":1558:1581  return totalSupplyToken */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1478:1588  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3120:3530  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"contracts/ERC20.sol\":3226:3230  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3243:3280  doTransfer(sender, recipient, amount) */\n      tag_75\n        /* \"contracts/ERC20.sol\":3254:3260  sender */\n      dup5\n        /* \"contracts/ERC20.sol\":3262:3271  recipient */\n      dup5\n        /* \"contracts/ERC20.sol\":3273:3279  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":3243:3253  doTransfer */\n      tag_76\n        /* \"contracts/ERC20.sol\":3243:3280  doTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/ERC20.sol\":3291:3315  uint256 currentAllowance */\n      0x00\n        /* \"contracts/ERC20.sol\":3318:3328  allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":3318:3336  allowances[sender] */\n      0x00\n        /* \"contracts/ERC20.sol\":3329:3335  sender */\n      dup7\n        /* \"contracts/ERC20.sol\":3318:3336  allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":3318:3347  allowances[sender][recipient] */\n      0x00\n        /* \"contracts/ERC20.sol\":3337:3346  recipient */\n      dup6\n        /* \"contracts/ERC20.sol\":3318:3347  allowances[sender][recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":3291:3347  uint256 currentAllowance = allowances[sender][recipient] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3385:3391  amount */\n      dup3\n        /* \"contracts/ERC20.sol\":3365:3381  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":3365:3391  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":3357:3436  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"contracts/ERC20.sol\":3446:3501  doApprove(sender, recipient, currentAllowance - amount) */\n      tag_80\n        /* \"contracts/ERC20.sol\":3456:3462  sender */\n      dup6\n        /* \"contracts/ERC20.sol\":3464:3473  recipient */\n      dup6\n        /* \"contracts/ERC20.sol\":3494:3500  amount */\n      dup6\n        /* \"contracts/ERC20.sol\":3475:3491  currentAllowance */\n      dup5\n        /* \"contracts/ERC20.sol\":3475:3500  currentAllowance - amount */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"contracts/ERC20.sol\":3446:3455  doApprove */\n      tag_72\n        /* \"contracts/ERC20.sol\":3446:3501  doApprove(sender, recipient, currentAllowance - amount) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/ERC20.sol\":3519:3523  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3512:3523  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":3120:3530  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1336:1418  function decimals() public view virtual returns (uint8) {... */\n    tag_35:\n        /* \"contracts/ERC20.sol\":1385:1390  uint8 */\n      0x00\n        /* \"contracts/ERC20.sol\":1409:1411  18 */\n      0x12\n        /* \"contracts/ERC20.sol\":1402:1411  return 18 */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1336:1418  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3925:4133  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"contracts/ERC20.sol\":4013:4017  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4029:4105  doApprove(msg.sender, spender, allowances[msg.sender][spender] + addedValue) */\n      tag_85\n        /* \"contracts/ERC20.sol\":4039:4049  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":4051:4058  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":4094:4104  addedValue */\n      dup5\n        /* \"contracts/ERC20.sol\":4060:4070  allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":4060:4082  allowances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20.sol\":4071:4081  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":4060:4082  allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4060:4091  allowances[msg.sender][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":4083:4090  spender */\n      dup9\n        /* \"contracts/ERC20.sol\":4060:4091  allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4060:4104  allowances[msg.sender][spender] + addedValue */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/ERC20.sol\":4029:4038  doApprove */\n      tag_72\n        /* \"contracts/ERC20.sol\":4029:4105  doApprove(msg.sender, spender, allowances[msg.sender][spender] + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/ERC20.sol\":4122:4126  true */\n      0x01\n        /* \"contracts/ERC20.sol\":4115:4126  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3925:4133  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1646:1770  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"contracts/ERC20.sol\":1720:1727  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":1746:1754  balances */\n      dup1\n        /* \"contracts/ERC20.sol\":1746:1763  balances[account] */\n      0x00\n        /* \"contracts/ERC20.sol\":1755:1762  account */\n      dup4\n        /* \"contracts/ERC20.sol\":1746:1763  balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":1739:1763  return balances[account] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1646:1770  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":615:712  function symbol() public view virtual returns (string memory) {... */\n    tag_48:\n        /* \"contracts/ERC20.sol\":662:675  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":694:705  tokenSymbol */\n      0x04\n        /* \"contracts/ERC20.sol\":687:705  return tokenSymbol */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_65\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":615:712  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4620:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"contracts/ERC20.sol\":4713:4717  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4729:4753  uint256 currentAllowance */\n      dup1\n        /* \"contracts/ERC20.sol\":4756:4766  allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":4756:4778  allowances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20.sol\":4767:4777  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":4756:4778  allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4756:4787  allowances[msg.sender][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":4779:4786  spender */\n      dup6\n        /* \"contracts/ERC20.sol\":4756:4787  allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4729:4787  uint256 currentAllowance = allowances[msg.sender][spender] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":4825:4840  subtractedValue */\n      dup3\n        /* \"contracts/ERC20.sol\":4805:4821  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":4805:4840  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":4797:4882  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"contracts/ERC20.sol\":4892:4958  doApprove(msg.sender, spender, currentAllowance - subtractedValue) */\n      tag_99\n        /* \"contracts/ERC20.sol\":4902:4912  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":4914:4921  spender */\n      dup6\n        /* \"contracts/ERC20.sol\":4942:4957  subtractedValue */\n      dup6\n        /* \"contracts/ERC20.sol\":4923:4939  currentAllowance */\n      dup5\n        /* \"contracts/ERC20.sol\":4923:4957  currentAllowance - subtractedValue */\n      tag_100\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_100:\n        /* \"contracts/ERC20.sol\":4892:4901  doApprove */\n      tag_72\n        /* \"contracts/ERC20.sol\":4892:4958  doApprove(msg.sender, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/ERC20.sol\":4976:4980  true */\n      0x01\n        /* \"contracts/ERC20.sol\":4969:4980  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":4620:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1973:2144  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"contracts/ERC20.sol\":2059:2063  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2075:2116  doTransfer(msg.sender, recipient, amount) */\n      tag_102\n        /* \"contracts/ERC20.sol\":2086:2096  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":2098:2107  recipient */\n      dup5\n        /* \"contracts/ERC20.sol\":2109:2115  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":2075:2085  doTransfer */\n      tag_76\n        /* \"contracts/ERC20.sol\":2075:2116  doTransfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/ERC20.sol\":2133:2137  true */\n      0x01\n        /* \"contracts/ERC20.sol\":2126:2137  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1973:2144  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2202:2350  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"contracts/ERC20.sol\":2291:2298  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":2317:2327  allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":2317:2334  allowances[owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":2328:2333  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":2317:2334  allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":2317:2343  allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":2335:2342  spender */\n      dup4\n        /* \"contracts/ERC20.sol\":2317:2343  allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2310:2343  return allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2202:2350  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":7705:8045  function doApprove(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_72:\n        /* \"contracts/ERC20.sol\":7824:7825  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":7807:7826  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":7807:7812  owner */\n      dup4\n        /* \"contracts/ERC20.sol\":7807:7826  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20.sol\":7799:7867  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/ERC20.sol\":7904:7905  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":7885:7906  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":7885:7892  spender */\n      dup3\n        /* \"contracts/ERC20.sol\":7885:7906  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20.sol\":7877:7945  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/ERC20.sol\":7985:7991  amount */\n      dup1\n        /* \"contracts/ERC20.sol\":7956:7966  allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":7956:7973  allowances[owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":7967:7972  owner */\n      dup6\n        /* \"contracts/ERC20.sol\":7956:7973  allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":7956:7982  allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":7974:7981  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":7956:7982  allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":7956:7991  allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":8022:8029  spender */\n      dup2\n        /* \"contracts/ERC20.sol\":8006:8038  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":8015:8020  owner */\n      dup4\n        /* \"contracts/ERC20.sol\":8006:8038  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20.sol\":8031:8037  amount */\n      dup4\n        /* \"contracts/ERC20.sol\":8006:8038  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":7705:8045  function doApprove(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5461:5994  function doTransfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_76:\n        /* \"contracts/ERC20.sol\":5586:5587  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5568:5588  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5568:5574  sender */\n      dup4\n        /* \"contracts/ERC20.sol\":5568:5588  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20.sol\":5560:5630  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/ERC20.sol\":5669:5670  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5648:5671  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5648:5657  recipient */\n      dup3\n        /* \"contracts/ERC20.sol\":5648:5671  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20.sol\":5640:5711  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/ERC20.sol\":5722:5743  uint256 senderBalance */\n      0x00\n        /* \"contracts/ERC20.sol\":5746:5754  balances */\n      dup1\n        /* \"contracts/ERC20.sol\":5746:5762  balances[sender] */\n      0x00\n        /* \"contracts/ERC20.sol\":5755:5761  sender */\n      dup6\n        /* \"contracts/ERC20.sol\":5746:5762  balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":5722:5762  uint256 senderBalance = balances[sender] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5797:5803  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":5780:5793  senderBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":5780:5803  senderBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":5772:5846  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/ERC20.sol\":5891:5897  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":5875:5888  senderBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":5875:5897  senderBalance - amount */\n      tag_122\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC20.sol\":5856:5864  balances */\n      0x00\n        /* \"contracts/ERC20.sol\":5856:5872  balances[sender] */\n      dup1\n        /* \"contracts/ERC20.sol\":5865:5871  sender */\n      dup7\n        /* \"contracts/ERC20.sol\":5856:5872  balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5856:5897  balances[sender] = senderBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":5930:5936  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":5907:5915  balances */\n      0x00\n        /* \"contracts/ERC20.sol\":5907:5926  balances[recipient] */\n      dup1\n        /* \"contracts/ERC20.sol\":5916:5925  recipient */\n      dup6\n        /* \"contracts/ERC20.sol\":5907:5926  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20.sol\":5907:5936  balances[recipient] += amount */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":5968:5977  recipient */\n      dup3\n        /* \"contracts/ERC20.sol\":5951:5986  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5960:5966  sender */\n      dup5\n        /* \"contracts/ERC20.sol\":5951:5986  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":5979:5985  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":5951:5986  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":5549:5994  {... */\n      pop\n        /* \"contracts/ERC20.sol\":5461:5994  function doTransfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_126:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_128\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_130:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_132\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_44:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":373:492   */\n    tag_135:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_138\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_126\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_60:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_141\n      tag_137\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":725:844   */\n    tag_140:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_142\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_126\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_143\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_126\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_31:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_146\n      tag_137\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1222:1341   */\n    tag_145:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_147\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_126\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_148\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_126\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_149\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_130\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_21:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_152\n      tag_137\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1830:1949   */\n    tag_151:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_153\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_126\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_154\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_130\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_155:\n        /* \"#utility.yul\":2298:2319   */\n      tag_157\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_159:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_161\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2503:2574   */\n      tag_163\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_165\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2660:2689   */\n      tag_167\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3068   */\n    tag_169:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2865:2932   */\n      tag_171\n        /* \"#utility.yul\":2929:2931   */\n      0x23\n        /* \"#utility.yul\":2924:2927   */\n      dup4\n        /* \"#utility.yul\":2865:2932   */\n      tag_164\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2858:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3034   */\n      tag_172\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":2941:3034   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3059:3061   */\n      0x40\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3050:3062   */\n      add\n        /* \"#utility.yul\":3043:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:3068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3440   */\n    tag_174:\n        /* \"#utility.yul\":3216:3219   */\n      0x00\n        /* \"#utility.yul\":3237:3304   */\n      tag_176\n        /* \"#utility.yul\":3301:3303   */\n      0x22\n        /* \"#utility.yul\":3296:3299   */\n      dup4\n        /* \"#utility.yul\":3237:3304   */\n      tag_164\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3230:3304   */\n      swap2\n      pop\n        /* \"#utility.yul\":3313:3406   */\n      tag_177\n        /* \"#utility.yul\":3402:3405   */\n      dup3\n        /* \"#utility.yul\":3313:3406   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3431:3433   */\n      0x40\n        /* \"#utility.yul\":3426:3429   */\n      dup3\n        /* \"#utility.yul\":3422:3434   */\n      add\n        /* \"#utility.yul\":3415:3434   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3812   */\n    tag_179:\n        /* \"#utility.yul\":3588:3591   */\n      0x00\n        /* \"#utility.yul\":3609:3676   */\n      tag_181\n        /* \"#utility.yul\":3673:3675   */\n      0x26\n        /* \"#utility.yul\":3668:3671   */\n      dup4\n        /* \"#utility.yul\":3609:3676   */\n      tag_164\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3602:3676   */\n      swap2\n      pop\n        /* \"#utility.yul\":3685:3778   */\n      tag_182\n        /* \"#utility.yul\":3774:3777   */\n      dup3\n        /* \"#utility.yul\":3685:3778   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3803:3805   */\n      0x40\n        /* \"#utility.yul\":3798:3801   */\n      dup3\n        /* \"#utility.yul\":3794:3806   */\n      add\n        /* \"#utility.yul\":3787:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3446:3812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4184   */\n    tag_184:\n        /* \"#utility.yul\":3960:3963   */\n      0x00\n        /* \"#utility.yul\":3981:4048   */\n      tag_186\n        /* \"#utility.yul\":4045:4047   */\n      0x28\n        /* \"#utility.yul\":4040:4043   */\n      dup4\n        /* \"#utility.yul\":3981:4048   */\n      tag_164\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3974:4048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4057:4150   */\n      tag_187\n        /* \"#utility.yul\":4146:4149   */\n      dup3\n        /* \"#utility.yul\":4057:4150   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4175:4177   */\n      0x40\n        /* \"#utility.yul\":4170:4173   */\n      dup3\n        /* \"#utility.yul\":4166:4178   */\n      add\n        /* \"#utility.yul\":4159:4178   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:4184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4190:4556   */\n    tag_189:\n        /* \"#utility.yul\":4332:4335   */\n      0x00\n        /* \"#utility.yul\":4353:4420   */\n      tag_191\n        /* \"#utility.yul\":4417:4419   */\n      0x25\n        /* \"#utility.yul\":4412:4415   */\n      dup4\n        /* \"#utility.yul\":4353:4420   */\n      tag_164\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4346:4420   */\n      swap2\n      pop\n        /* \"#utility.yul\":4429:4522   */\n      tag_192\n        /* \"#utility.yul\":4518:4521   */\n      dup3\n        /* \"#utility.yul\":4429:4522   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4547:4549   */\n      0x40\n        /* \"#utility.yul\":4542:4545   */\n      dup3\n        /* \"#utility.yul\":4538:4550   */\n      add\n        /* \"#utility.yul\":4531:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4190:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4928   */\n    tag_194:\n        /* \"#utility.yul\":4704:4707   */\n      0x00\n        /* \"#utility.yul\":4725:4792   */\n      tag_196\n        /* \"#utility.yul\":4789:4791   */\n      0x24\n        /* \"#utility.yul\":4784:4787   */\n      dup4\n        /* \"#utility.yul\":4725:4792   */\n      tag_164\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4718:4792   */\n      swap2\n      pop\n        /* \"#utility.yul\":4801:4894   */\n      tag_197\n        /* \"#utility.yul\":4890:4893   */\n      dup3\n        /* \"#utility.yul\":4801:4894   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4919:4921   */\n      0x40\n        /* \"#utility.yul\":4914:4917   */\n      dup3\n        /* \"#utility.yul\":4910:4922   */\n      add\n        /* \"#utility.yul\":4903:4922   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4934:5300   */\n    tag_199:\n        /* \"#utility.yul\":5076:5079   */\n      0x00\n        /* \"#utility.yul\":5097:5164   */\n      tag_201\n        /* \"#utility.yul\":5161:5163   */\n      0x25\n        /* \"#utility.yul\":5156:5159   */\n      dup4\n        /* \"#utility.yul\":5097:5164   */\n      tag_164\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5090:5164   */\n      swap2\n      pop\n        /* \"#utility.yul\":5173:5266   */\n      tag_202\n        /* \"#utility.yul\":5262:5265   */\n      dup3\n        /* \"#utility.yul\":5173:5266   */\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5291:5293   */\n      0x40\n        /* \"#utility.yul\":5286:5289   */\n      dup3\n        /* \"#utility.yul\":5282:5294   */\n      add\n        /* \"#utility.yul\":5275:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4934:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5424   */\n    tag_204:\n        /* \"#utility.yul\":5393:5417   */\n      tag_206\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5393:5417   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5388:5391   */\n      dup3\n        /* \"#utility.yul\":5381:5418   */\n      mstore\n        /* \"#utility.yul\":5306:5424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5542   */\n    tag_208:\n        /* \"#utility.yul\":5513:5535   */\n      tag_210\n        /* \"#utility.yul\":5529:5534   */\n      dup2\n        /* \"#utility.yul\":5513:5535   */\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5508:5511   */\n      dup3\n        /* \"#utility.yul\":5501:5536   */\n      mstore\n        /* \"#utility.yul\":5430:5542   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5758   */\n    tag_24:\n        /* \"#utility.yul\":5635:5639   */\n      0x00\n        /* \"#utility.yul\":5673:5675   */\n      0x20\n        /* \"#utility.yul\":5662:5671   */\n      dup3\n        /* \"#utility.yul\":5658:5676   */\n      add\n        /* \"#utility.yul\":5650:5676   */\n      swap1\n      pop\n        /* \"#utility.yul\":5686:5751   */\n      tag_213\n        /* \"#utility.yul\":5748:5749   */\n      0x00\n        /* \"#utility.yul\":5737:5746   */\n      dup4\n        /* \"#utility.yul\":5733:5750   */\n      add\n        /* \"#utility.yul\":5724:5730   */\n      dup5\n        /* \"#utility.yul\":5686:5751   */\n      tag_155\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5548:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6077   */\n    tag_18:\n        /* \"#utility.yul\":5877:5881   */\n      0x00\n        /* \"#utility.yul\":5915:5917   */\n      0x20\n        /* \"#utility.yul\":5904:5913   */\n      dup3\n        /* \"#utility.yul\":5900:5918   */\n      add\n        /* \"#utility.yul\":5892:5918   */\n      swap1\n      pop\n        /* \"#utility.yul\":5964:5973   */\n      dup2\n        /* \"#utility.yul\":5958:5962   */\n      dup2\n        /* \"#utility.yul\":5954:5974   */\n      sub\n        /* \"#utility.yul\":5950:5951   */\n      0x00\n        /* \"#utility.yul\":5939:5948   */\n      dup4\n        /* \"#utility.yul\":5935:5952   */\n      add\n        /* \"#utility.yul\":5928:5975   */\n      mstore\n        /* \"#utility.yul\":5992:6070   */\n      tag_215\n        /* \"#utility.yul\":6065:6069   */\n      dup2\n        /* \"#utility.yul\":6056:6062   */\n      dup5\n        /* \"#utility.yul\":5992:6070   */\n      tag_159\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5984:6070   */\n      swap1\n      pop\n        /* \"#utility.yul\":5764:6077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6502   */\n    tag_118:\n        /* \"#utility.yul\":6249:6253   */\n      0x00\n        /* \"#utility.yul\":6287:6289   */\n      0x20\n        /* \"#utility.yul\":6276:6285   */\n      dup3\n        /* \"#utility.yul\":6272:6290   */\n      add\n        /* \"#utility.yul\":6264:6290   */\n      swap1\n      pop\n        /* \"#utility.yul\":6336:6345   */\n      dup2\n        /* \"#utility.yul\":6330:6334   */\n      dup2\n        /* \"#utility.yul\":6326:6346   */\n      sub\n        /* \"#utility.yul\":6322:6323   */\n      0x00\n        /* \"#utility.yul\":6311:6320   */\n      dup4\n        /* \"#utility.yul\":6307:6324   */\n      add\n        /* \"#utility.yul\":6300:6347   */\n      mstore\n        /* \"#utility.yul\":6364:6495   */\n      tag_217\n        /* \"#utility.yul\":6490:6494   */\n      dup2\n        /* \"#utility.yul\":6364:6495   */\n      tag_169\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6356:6495   */\n      swap1\n      pop\n        /* \"#utility.yul\":6083:6502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6508:6927   */\n    tag_110:\n        /* \"#utility.yul\":6674:6678   */\n      0x00\n        /* \"#utility.yul\":6712:6714   */\n      0x20\n        /* \"#utility.yul\":6701:6710   */\n      dup3\n        /* \"#utility.yul\":6697:6715   */\n      add\n        /* \"#utility.yul\":6689:6715   */\n      swap1\n      pop\n        /* \"#utility.yul\":6761:6770   */\n      dup2\n        /* \"#utility.yul\":6755:6759   */\n      dup2\n        /* \"#utility.yul\":6751:6771   */\n      sub\n        /* \"#utility.yul\":6747:6748   */\n      0x00\n        /* \"#utility.yul\":6736:6745   */\n      dup4\n        /* \"#utility.yul\":6732:6749   */\n      add\n        /* \"#utility.yul\":6725:6772   */\n      mstore\n        /* \"#utility.yul\":6789:6920   */\n      tag_219\n        /* \"#utility.yul\":6915:6919   */\n      dup2\n        /* \"#utility.yul\":6789:6920   */\n      tag_174\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6781:6920   */\n      swap1\n      pop\n        /* \"#utility.yul\":6508:6927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6933:7352   */\n    tag_121:\n        /* \"#utility.yul\":7099:7103   */\n      0x00\n        /* \"#utility.yul\":7137:7139   */\n      0x20\n        /* \"#utility.yul\":7126:7135   */\n      dup3\n        /* \"#utility.yul\":7122:7140   */\n      add\n        /* \"#utility.yul\":7114:7140   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7195   */\n      dup2\n        /* \"#utility.yul\":7180:7184   */\n      dup2\n        /* \"#utility.yul\":7176:7196   */\n      sub\n        /* \"#utility.yul\":7172:7173   */\n      0x00\n        /* \"#utility.yul\":7161:7170   */\n      dup4\n        /* \"#utility.yul\":7157:7174   */\n      add\n        /* \"#utility.yul\":7150:7197   */\n      mstore\n        /* \"#utility.yul\":7214:7345   */\n      tag_221\n        /* \"#utility.yul\":7340:7344   */\n      dup2\n        /* \"#utility.yul\":7214:7345   */\n      tag_179\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7206:7345   */\n      swap1\n      pop\n        /* \"#utility.yul\":6933:7352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7777   */\n    tag_79:\n        /* \"#utility.yul\":7524:7528   */\n      0x00\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7551:7560   */\n      dup3\n        /* \"#utility.yul\":7547:7565   */\n      add\n        /* \"#utility.yul\":7539:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7611:7620   */\n      dup2\n        /* \"#utility.yul\":7605:7609   */\n      dup2\n        /* \"#utility.yul\":7601:7621   */\n      sub\n        /* \"#utility.yul\":7597:7598   */\n      0x00\n        /* \"#utility.yul\":7586:7595   */\n      dup4\n        /* \"#utility.yul\":7582:7599   */\n      add\n        /* \"#utility.yul\":7575:7622   */\n      mstore\n        /* \"#utility.yul\":7639:7770   */\n      tag_223\n        /* \"#utility.yul\":7765:7769   */\n      dup2\n        /* \"#utility.yul\":7639:7770   */\n      tag_184\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":7631:7770   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7783:8202   */\n    tag_115:\n        /* \"#utility.yul\":7949:7953   */\n      0x00\n        /* \"#utility.yul\":7987:7989   */\n      0x20\n        /* \"#utility.yul\":7976:7985   */\n      dup3\n        /* \"#utility.yul\":7972:7990   */\n      add\n        /* \"#utility.yul\":7964:7990   */\n      swap1\n      pop\n        /* \"#utility.yul\":8036:8045   */\n      dup2\n        /* \"#utility.yul\":8030:8034   */\n      dup2\n        /* \"#utility.yul\":8026:8046   */\n      sub\n        /* \"#utility.yul\":8022:8023   */\n      0x00\n        /* \"#utility.yul\":8011:8020   */\n      dup4\n        /* \"#utility.yul\":8007:8024   */\n      add\n        /* \"#utility.yul\":8000:8047   */\n      mstore\n        /* \"#utility.yul\":8064:8195   */\n      tag_225\n        /* \"#utility.yul\":8190:8194   */\n      dup2\n        /* \"#utility.yul\":8064:8195   */\n      tag_189\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8056:8195   */\n      swap1\n      pop\n        /* \"#utility.yul\":7783:8202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8208:8627   */\n    tag_107:\n        /* \"#utility.yul\":8374:8378   */\n      0x00\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup3\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8389:8415   */\n      swap1\n      pop\n        /* \"#utility.yul\":8461:8470   */\n      dup2\n        /* \"#utility.yul\":8455:8459   */\n      dup2\n        /* \"#utility.yul\":8451:8471   */\n      sub\n        /* \"#utility.yul\":8447:8448   */\n      0x00\n        /* \"#utility.yul\":8436:8445   */\n      dup4\n        /* \"#utility.yul\":8432:8449   */\n      add\n        /* \"#utility.yul\":8425:8472   */\n      mstore\n        /* \"#utility.yul\":8489:8620   */\n      tag_227\n        /* \"#utility.yul\":8615:8619   */\n      dup2\n        /* \"#utility.yul\":8489:8620   */\n      tag_194\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":8481:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8208:8627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8633:9052   */\n    tag_98:\n        /* \"#utility.yul\":8799:8803   */\n      0x00\n        /* \"#utility.yul\":8837:8839   */\n      0x20\n        /* \"#utility.yul\":8826:8835   */\n      dup3\n        /* \"#utility.yul\":8822:8840   */\n      add\n        /* \"#utility.yul\":8814:8840   */\n      swap1\n      pop\n        /* \"#utility.yul\":8886:8895   */\n      dup2\n        /* \"#utility.yul\":8880:8884   */\n      dup2\n        /* \"#utility.yul\":8876:8896   */\n      sub\n        /* \"#utility.yul\":8872:8873   */\n      0x00\n        /* \"#utility.yul\":8861:8870   */\n      dup4\n        /* \"#utility.yul\":8857:8874   */\n      add\n        /* \"#utility.yul\":8850:8897   */\n      mstore\n        /* \"#utility.yul\":8914:9045   */\n      tag_229\n        /* \"#utility.yul\":9040:9044   */\n      dup2\n        /* \"#utility.yul\":8914:9045   */\n      tag_199\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":8906:9045   */\n      swap1\n      pop\n        /* \"#utility.yul\":8633:9052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9058:9280   */\n    tag_28:\n        /* \"#utility.yul\":9151:9155   */\n      0x00\n        /* \"#utility.yul\":9189:9191   */\n      0x20\n        /* \"#utility.yul\":9178:9187   */\n      dup3\n        /* \"#utility.yul\":9174:9192   */\n      add\n        /* \"#utility.yul\":9166:9192   */\n      swap1\n      pop\n        /* \"#utility.yul\":9202:9273   */\n      tag_231\n        /* \"#utility.yul\":9270:9271   */\n      0x00\n        /* \"#utility.yul\":9259:9268   */\n      dup4\n        /* \"#utility.yul\":9255:9272   */\n      add\n        /* \"#utility.yul\":9246:9252   */\n      dup5\n        /* \"#utility.yul\":9202:9273   */\n      tag_204\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9058:9280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9286:9500   */\n    tag_37:\n        /* \"#utility.yul\":9375:9379   */\n      0x00\n        /* \"#utility.yul\":9413:9415   */\n      0x20\n        /* \"#utility.yul\":9402:9411   */\n      dup3\n        /* \"#utility.yul\":9398:9416   */\n      add\n        /* \"#utility.yul\":9390:9416   */\n      swap1\n      pop\n        /* \"#utility.yul\":9426:9493   */\n      tag_233\n        /* \"#utility.yul\":9490:9491   */\n      0x00\n        /* \"#utility.yul\":9479:9488   */\n      dup4\n        /* \"#utility.yul\":9475:9492   */\n      add\n        /* \"#utility.yul\":9466:9472   */\n      dup5\n        /* \"#utility.yul\":9426:9493   */\n      tag_208\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":9286:9500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9587:9686   */\n    tag_162:\n        /* \"#utility.yul\":9639:9645   */\n      0x00\n        /* \"#utility.yul\":9673:9678   */\n      dup2\n        /* \"#utility.yul\":9667:9679   */\n      mload\n        /* \"#utility.yul\":9657:9679   */\n      swap1\n      pop\n        /* \"#utility.yul\":9587:9686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9692:9861   */\n    tag_164:\n        /* \"#utility.yul\":9776:9787   */\n      0x00\n        /* \"#utility.yul\":9810:9816   */\n      dup3\n        /* \"#utility.yul\":9805:9808   */\n      dup3\n        /* \"#utility.yul\":9798:9817   */\n      mstore\n        /* \"#utility.yul\":9850:9854   */\n      0x20\n        /* \"#utility.yul\":9845:9848   */\n      dup3\n        /* \"#utility.yul\":9841:9855   */\n      add\n        /* \"#utility.yul\":9826:9855   */\n      swap1\n      pop\n        /* \"#utility.yul\":9692:9861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9867:10172   */\n    tag_87:\n        /* \"#utility.yul\":9907:9910   */\n      0x00\n        /* \"#utility.yul\":9926:9946   */\n      tag_239\n        /* \"#utility.yul\":9944:9945   */\n      dup3\n        /* \"#utility.yul\":9926:9946   */\n      tag_207\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":9921:9946   */\n      swap2\n      pop\n        /* \"#utility.yul\":9960:9980   */\n      tag_240\n        /* \"#utility.yul\":9978:9979   */\n      dup4\n        /* \"#utility.yul\":9960:9980   */\n      tag_207\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9955:9980   */\n      swap3\n      pop\n        /* \"#utility.yul\":10114:10115   */\n      dup3\n        /* \"#utility.yul\":10046:10112   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10042:10116   */\n      sub\n        /* \"#utility.yul\":10039:10040   */\n      dup3\n        /* \"#utility.yul\":10036:10117   */\n      gt\n        /* \"#utility.yul\":10033:10140   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":10120:10138   */\n      tag_242\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":10033:10140   */\n    tag_241:\n        /* \"#utility.yul\":10164:10165   */\n      dup3\n        /* \"#utility.yul\":10161:10162   */\n      dup3\n        /* \"#utility.yul\":10157:10166   */\n      add\n        /* \"#utility.yul\":10150:10166   */\n      swap1\n      pop\n        /* \"#utility.yul\":9867:10172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10178:10369   */\n    tag_82:\n        /* \"#utility.yul\":10218:10222   */\n      0x00\n        /* \"#utility.yul\":10238:10258   */\n      tag_245\n        /* \"#utility.yul\":10256:10257   */\n      dup3\n        /* \"#utility.yul\":10238:10258   */\n      tag_207\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":10233:10258   */\n      swap2\n      pop\n        /* \"#utility.yul\":10272:10292   */\n      tag_246\n        /* \"#utility.yul\":10290:10291   */\n      dup4\n        /* \"#utility.yul\":10272:10292   */\n      tag_207\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":10267:10292   */\n      swap3\n      pop\n        /* \"#utility.yul\":10311:10312   */\n      dup3\n        /* \"#utility.yul\":10308:10309   */\n      dup3\n        /* \"#utility.yul\":10305:10313   */\n      lt\n        /* \"#utility.yul\":10302:10336   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":10316:10334   */\n      tag_248\n      tag_243\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":10302:10336   */\n    tag_247:\n        /* \"#utility.yul\":10361:10362   */\n      dup3\n        /* \"#utility.yul\":10358:10359   */\n      dup3\n        /* \"#utility.yul\":10354:10363   */\n      sub\n        /* \"#utility.yul\":10346:10363   */\n      swap1\n      pop\n        /* \"#utility.yul\":10178:10369   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10375:10471   */\n    tag_249:\n        /* \"#utility.yul\":10412:10419   */\n      0x00\n        /* \"#utility.yul\":10441:10465   */\n      tag_251\n        /* \"#utility.yul\":10459:10464   */\n      dup3\n        /* \"#utility.yul\":10441:10465   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":10430:10465   */\n      swap1\n      pop\n        /* \"#utility.yul\":10375:10471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10477:10567   */\n    tag_158:\n        /* \"#utility.yul\":10511:10518   */\n      0x00\n        /* \"#utility.yul\":10554:10559   */\n      dup2\n        /* \"#utility.yul\":10547:10560   */\n      iszero\n        /* \"#utility.yul\":10540:10561   */\n      iszero\n        /* \"#utility.yul\":10529:10561   */\n      swap1\n      pop\n        /* \"#utility.yul\":10477:10567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10573:10699   */\n    tag_252:\n        /* \"#utility.yul\":10610:10617   */\n      0x00\n        /* \"#utility.yul\":10650:10692   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10643:10648   */\n      dup3\n        /* \"#utility.yul\":10639:10693   */\n      and\n        /* \"#utility.yul\":10628:10693   */\n      swap1\n      pop\n        /* \"#utility.yul\":10573:10699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10705:10782   */\n    tag_207:\n        /* \"#utility.yul\":10742:10749   */\n      0x00\n        /* \"#utility.yul\":10771:10776   */\n      dup2\n        /* \"#utility.yul\":10760:10776   */\n      swap1\n      pop\n        /* \"#utility.yul\":10705:10782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10788:10874   */\n    tag_211:\n        /* \"#utility.yul\":10823:10830   */\n      0x00\n        /* \"#utility.yul\":10863:10867   */\n      0xff\n        /* \"#utility.yul\":10856:10861   */\n      dup3\n        /* \"#utility.yul\":10852:10868   */\n      and\n        /* \"#utility.yul\":10841:10868   */\n      swap1\n      pop\n        /* \"#utility.yul\":10788:10874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10880:11187   */\n    tag_166:\n        /* \"#utility.yul\":10948:10949   */\n      0x00\n        /* \"#utility.yul\":10958:11071   */\n    tag_258:\n        /* \"#utility.yul\":10972:10978   */\n      dup4\n        /* \"#utility.yul\":10969:10970   */\n      dup2\n        /* \"#utility.yul\":10966:10979   */\n      lt\n        /* \"#utility.yul\":10958:11071   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":11057:11058   */\n      dup1\n        /* \"#utility.yul\":11052:11055   */\n      dup3\n        /* \"#utility.yul\":11048:11059   */\n      add\n        /* \"#utility.yul\":11042:11060   */\n      mload\n        /* \"#utility.yul\":11038:11039   */\n      dup2\n        /* \"#utility.yul\":11033:11036   */\n      dup5\n        /* \"#utility.yul\":11029:11040   */\n      add\n        /* \"#utility.yul\":11022:11061   */\n      mstore\n        /* \"#utility.yul\":10994:10996   */\n      0x20\n        /* \"#utility.yul\":10991:10992   */\n      dup2\n        /* \"#utility.yul\":10987:10997   */\n      add\n        /* \"#utility.yul\":10982:10997   */\n      swap1\n      pop\n        /* \"#utility.yul\":10958:11071   */\n      jump(tag_258)\n    tag_260:\n        /* \"#utility.yul\":11089:11095   */\n      dup4\n        /* \"#utility.yul\":11086:11087   */\n      dup2\n        /* \"#utility.yul\":11083:11096   */\n      gt\n        /* \"#utility.yul\":11080:11181   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":11169:11170   */\n      0x00\n        /* \"#utility.yul\":11160:11166   */\n      dup5\n        /* \"#utility.yul\":11155:11158   */\n      dup5\n        /* \"#utility.yul\":11151:11167   */\n      add\n        /* \"#utility.yul\":11144:11171   */\n      mstore\n        /* \"#utility.yul\":11080:11181   */\n    tag_261:\n        /* \"#utility.yul\":10929:11187   */\n      pop\n        /* \"#utility.yul\":10880:11187   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11193:11513   */\n    tag_65:\n        /* \"#utility.yul\":11237:11243   */\n      0x00\n        /* \"#utility.yul\":11274:11275   */\n      0x02\n        /* \"#utility.yul\":11268:11272   */\n      dup3\n        /* \"#utility.yul\":11264:11276   */\n      div\n        /* \"#utility.yul\":11254:11276   */\n      swap1\n      pop\n        /* \"#utility.yul\":11321:11322   */\n      0x01\n        /* \"#utility.yul\":11315:11319   */\n      dup3\n        /* \"#utility.yul\":11311:11323   */\n      and\n        /* \"#utility.yul\":11342:11360   */\n      dup1\n        /* \"#utility.yul\":11332:11413   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":11398:11402   */\n      0x7f\n        /* \"#utility.yul\":11390:11396   */\n      dup3\n        /* \"#utility.yul\":11386:11403   */\n      and\n        /* \"#utility.yul\":11376:11403   */\n      swap2\n      pop\n        /* \"#utility.yul\":11332:11413   */\n    tag_263:\n        /* \"#utility.yul\":11460:11462   */\n      0x20\n        /* \"#utility.yul\":11452:11458   */\n      dup3\n        /* \"#utility.yul\":11449:11463   */\n      lt\n        /* \"#utility.yul\":11429:11447   */\n      dup2\n        /* \"#utility.yul\":11426:11464   */\n      eq\n        /* \"#utility.yul\":11423:11507   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":11479:11497   */\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":11423:11507   */\n    tag_264:\n        /* \"#utility.yul\":11244:11513   */\n      pop\n        /* \"#utility.yul\":11193:11513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11519:11699   */\n    tag_243:\n        /* \"#utility.yul\":11567:11644   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11564:11565   */\n      0x00\n        /* \"#utility.yul\":11557:11645   */\n      mstore\n        /* \"#utility.yul\":11664:11668   */\n      0x11\n        /* \"#utility.yul\":11661:11662   */\n      0x04\n        /* \"#utility.yul\":11654:11669   */\n      mstore\n        /* \"#utility.yul\":11688:11692   */\n      0x24\n        /* \"#utility.yul\":11685:11686   */\n      0x00\n        /* \"#utility.yul\":11678:11693   */\n      revert\n        /* \"#utility.yul\":11705:11885   */\n    tag_266:\n        /* \"#utility.yul\":11753:11830   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11750:11751   */\n      0x00\n        /* \"#utility.yul\":11743:11831   */\n      mstore\n        /* \"#utility.yul\":11850:11854   */\n      0x22\n        /* \"#utility.yul\":11847:11848   */\n      0x04\n        /* \"#utility.yul\":11840:11855   */\n      mstore\n        /* \"#utility.yul\":11874:11878   */\n      0x24\n        /* \"#utility.yul\":11871:11872   */\n      0x00\n        /* \"#utility.yul\":11864:11879   */\n      revert\n        /* \"#utility.yul\":12014:12131   */\n    tag_137:\n        /* \"#utility.yul\":12123:12124   */\n      0x00\n        /* \"#utility.yul\":12120:12121   */\n      dup1\n        /* \"#utility.yul\":12113:12125   */\n      revert\n        /* \"#utility.yul\":12137:12239   */\n    tag_168:\n        /* \"#utility.yul\":12178:12184   */\n      0x00\n        /* \"#utility.yul\":12229:12231   */\n      0x1f\n        /* \"#utility.yul\":12225:12232   */\n      not\n        /* \"#utility.yul\":12220:12222   */\n      0x1f\n        /* \"#utility.yul\":12213:12218   */\n      dup4\n        /* \"#utility.yul\":12209:12223   */\n      add\n        /* \"#utility.yul\":12205:12233   */\n      and\n        /* \"#utility.yul\":12195:12233   */\n      swap1\n      pop\n        /* \"#utility.yul\":12137:12239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12245:12467   */\n    tag_173:\n        /* \"#utility.yul\":12385:12419   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12381:12382   */\n      0x00\n        /* \"#utility.yul\":12373:12379   */\n      dup3\n        /* \"#utility.yul\":12369:12383   */\n      add\n        /* \"#utility.yul\":12362:12420   */\n      mstore\n        /* \"#utility.yul\":12454:12459   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12449:12451   */\n      0x20\n        /* \"#utility.yul\":12441:12447   */\n      dup3\n        /* \"#utility.yul\":12437:12452   */\n      add\n        /* \"#utility.yul\":12430:12460   */\n      mstore\n        /* \"#utility.yul\":12245:12467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12473:12694   */\n    tag_178:\n        /* \"#utility.yul\":12613:12647   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":12609:12610   */\n      0x00\n        /* \"#utility.yul\":12601:12607   */\n      dup3\n        /* \"#utility.yul\":12597:12611   */\n      add\n        /* \"#utility.yul\":12590:12648   */\n      mstore\n        /* \"#utility.yul\":12682:12686   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12677:12679   */\n      0x20\n        /* \"#utility.yul\":12669:12675   */\n      dup3\n        /* \"#utility.yul\":12665:12680   */\n      add\n        /* \"#utility.yul\":12658:12687   */\n      mstore\n        /* \"#utility.yul\":12473:12694   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12700:12925   */\n    tag_183:\n        /* \"#utility.yul\":12840:12874   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12836:12837   */\n      0x00\n        /* \"#utility.yul\":12828:12834   */\n      dup3\n        /* \"#utility.yul\":12824:12838   */\n      add\n        /* \"#utility.yul\":12817:12875   */\n      mstore\n        /* \"#utility.yul\":12909:12917   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12904:12906   */\n      0x20\n        /* \"#utility.yul\":12896:12902   */\n      dup3\n        /* \"#utility.yul\":12892:12907   */\n      add\n        /* \"#utility.yul\":12885:12918   */\n      mstore\n        /* \"#utility.yul\":12700:12925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12931:13158   */\n    tag_188:\n        /* \"#utility.yul\":13071:13105   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":13067:13068   */\n      0x00\n        /* \"#utility.yul\":13059:13065   */\n      dup3\n        /* \"#utility.yul\":13055:13069   */\n      add\n        /* \"#utility.yul\":13048:13106   */\n      mstore\n        /* \"#utility.yul\":13140:13150   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13135:13137   */\n      0x20\n        /* \"#utility.yul\":13127:13133   */\n      dup3\n        /* \"#utility.yul\":13123:13138   */\n      add\n        /* \"#utility.yul\":13116:13151   */\n      mstore\n        /* \"#utility.yul\":12931:13158   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13164:13388   */\n    tag_193:\n        /* \"#utility.yul\":13304:13338   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13300:13301   */\n      0x00\n        /* \"#utility.yul\":13292:13298   */\n      dup3\n        /* \"#utility.yul\":13288:13302   */\n      add\n        /* \"#utility.yul\":13281:13339   */\n      mstore\n        /* \"#utility.yul\":13373:13380   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13368:13370   */\n      0x20\n        /* \"#utility.yul\":13360:13366   */\n      dup3\n        /* \"#utility.yul\":13356:13371   */\n      add\n        /* \"#utility.yul\":13349:13381   */\n      mstore\n        /* \"#utility.yul\":13164:13388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13394:13617   */\n    tag_198:\n        /* \"#utility.yul\":13534:13568   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":13530:13531   */\n      0x00\n        /* \"#utility.yul\":13522:13528   */\n      dup3\n        /* \"#utility.yul\":13518:13532   */\n      add\n        /* \"#utility.yul\":13511:13569   */\n      mstore\n        /* \"#utility.yul\":13603:13609   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13598:13600   */\n      0x20\n        /* \"#utility.yul\":13590:13596   */\n      dup3\n        /* \"#utility.yul\":13586:13601   */\n      add\n        /* \"#utility.yul\":13579:13610   */\n      mstore\n        /* \"#utility.yul\":13394:13617   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13623:13847   */\n    tag_203:\n        /* \"#utility.yul\":13763:13797   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":13759:13760   */\n      0x00\n        /* \"#utility.yul\":13751:13757   */\n      dup3\n        /* \"#utility.yul\":13747:13761   */\n      add\n        /* \"#utility.yul\":13740:13798   */\n      mstore\n        /* \"#utility.yul\":13832:13839   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13827:13829   */\n      0x20\n        /* \"#utility.yul\":13819:13825   */\n      dup3\n        /* \"#utility.yul\":13815:13830   */\n      add\n        /* \"#utility.yul\":13808:13840   */\n      mstore\n        /* \"#utility.yul\":13623:13847   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13853:13975   */\n    tag_129:\n        /* \"#utility.yul\":13926:13950   */\n      tag_281\n        /* \"#utility.yul\":13944:13949   */\n      dup2\n        /* \"#utility.yul\":13926:13950   */\n      tag_249\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":13919:13924   */\n      dup2\n        /* \"#utility.yul\":13916:13951   */\n      eq\n        /* \"#utility.yul\":13906:13969   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":13965:13966   */\n      0x00\n        /* \"#utility.yul\":13962:13963   */\n      dup1\n        /* \"#utility.yul\":13955:13967   */\n      revert\n        /* \"#utility.yul\":13906:13969   */\n    tag_282:\n        /* \"#utility.yul\":13853:13975   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13981:14103   */\n    tag_133:\n        /* \"#utility.yul\":14054:14078   */\n      tag_284\n        /* \"#utility.yul\":14072:14077   */\n      dup2\n        /* \"#utility.yul\":14054:14078   */\n      tag_207\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":14047:14052   */\n      dup2\n        /* \"#utility.yul\":14044:14079   */\n      eq\n        /* \"#utility.yul\":14034:14097   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":14093:14094   */\n      0x00\n        /* \"#utility.yul\":14090:14091   */\n      dup1\n        /* \"#utility.yul\":14083:14095   */\n      revert\n        /* \"#utility.yul\":14034:14097   */\n    tag_285:\n        /* \"#utility.yul\":13981:14103   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122083c9c0cc418cfc3ea6a7a9bcba2aee3f11b1f3ddc1de095a62ddb961b99496c164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611399806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e00565b60405180910390f35b6100e660048036038101906100e19190610c4a565b610308565b6040516100f39190610de5565b60405180910390f35b61010461031f565b6040516101119190610f02565b60405180910390f35b610134600480360381019061012f9190610bf7565b610329565b6040516101419190610de5565b60405180910390f35b61015261041c565b60405161015f9190610f1d565b60405180910390f35b610182600480360381019061017d9190610c4a565b610425565b60405161018f9190610de5565b60405180910390f35b6101b260048036038101906101ad9190610b8a565b6104c3565b6040516101bf9190610f02565b60405180910390f35b6101d061050b565b6040516101dd9190610e00565b60405180910390f35b61020060048036038101906101fb9190610c4a565b61059d565b60405161020d9190610de5565b60405180910390f35b610230600480360381019061022b9190610c4a565b610683565b60405161023d9190610de5565b60405180910390f35b610260600480360381019061025b9190610bb7565b61069a565b60405161026d9190610f02565b60405180910390f35b60606003805461028590611066565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611066565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000610315338484610721565b6001905092915050565b6000600254905090565b60006103368484846108ec565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610e82565b60405180910390fd5b6104108585858461040b9190610faa565b610721565b60019150509392505050565b60006012905090565b60006104b9338484600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104b49190610f54565b610721565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461051a90611066565b80601f016020809104026020016040519081016040528092919081815260200182805461054690611066565b80156105935780601f1061056857610100808354040283529160200191610593565b820191906000526020600020905b81548152906001019060200180831161057657829003601f168201915b5050505050905090565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610662576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065990610ee2565b60405180910390fd5b610678338585846106739190610faa565b610721565b600191505092915050565b60006106903384846108ec565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890610ec2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890610e42565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108df9190610f02565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561095c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095390610ea2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c390610e22565b60405180910390fd5b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4990610e62565b60405180910390fd5b8181610a5e9190610faa565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aee9190610f54565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b529190610f02565b60405180910390a350505050565b600081359050610b6f81611335565b92915050565b600081359050610b848161134c565b92915050565b600060208284031215610ba057610b9f6110f6565b5b6000610bae84828501610b60565b91505092915050565b60008060408385031215610bce57610bcd6110f6565b5b6000610bdc85828601610b60565b9250506020610bed85828601610b60565b9150509250929050565b600080600060608486031215610c1057610c0f6110f6565b5b6000610c1e86828701610b60565b9350506020610c2f86828701610b60565b9250506040610c4086828701610b75565b9150509250925092565b60008060408385031215610c6157610c606110f6565b5b6000610c6f85828601610b60565b9250506020610c8085828601610b75565b9150509250929050565b610c9381610ff0565b82525050565b6000610ca482610f38565b610cae8185610f43565b9350610cbe818560208601611033565b610cc7816110fb565b840191505092915050565b6000610cdf602383610f43565b9150610cea8261110c565b604082019050919050565b6000610d02602283610f43565b9150610d0d8261115b565b604082019050919050565b6000610d25602683610f43565b9150610d30826111aa565b604082019050919050565b6000610d48602883610f43565b9150610d53826111f9565b604082019050919050565b6000610d6b602583610f43565b9150610d7682611248565b604082019050919050565b6000610d8e602483610f43565b9150610d9982611297565b604082019050919050565b6000610db1602583610f43565b9150610dbc826112e6565b604082019050919050565b610dd08161101c565b82525050565b610ddf81611026565b82525050565b6000602082019050610dfa6000830184610c8a565b92915050565b60006020820190508181036000830152610e1a8184610c99565b905092915050565b60006020820190508181036000830152610e3b81610cd2565b9050919050565b60006020820190508181036000830152610e5b81610cf5565b9050919050565b60006020820190508181036000830152610e7b81610d18565b9050919050565b60006020820190508181036000830152610e9b81610d3b565b9050919050565b60006020820190508181036000830152610ebb81610d5e565b9050919050565b60006020820190508181036000830152610edb81610d81565b9050919050565b60006020820190508181036000830152610efb81610da4565b9050919050565b6000602082019050610f176000830184610dc7565b92915050565b6000602082019050610f326000830184610dd6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f5f8261101c565b9150610f6a8361101c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f9f57610f9e611098565b5b828201905092915050565b6000610fb58261101c565b9150610fc08361101c565b925082821015610fd357610fd2611098565b5b828203905092915050565b6000610fe982610ffc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611051578082015181840152602081019050611036565b83811115611060576000848401525b50505050565b6000600282049050600182168061107e57607f821691505b60208210811415611092576110916110c7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133e81610fde565b811461134957600080fd5b50565b6113558161101c565b811461136057600080fd5b5056fea264697066735822122083c9c0cc418cfc3ea6a7a9bcba2aee3f11b1f3ddc1de095a62ddb961b99496c164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1399 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x31F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x1066 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x1066 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315 CALLER DUP5 DUP5 PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336 DUP5 DUP5 DUP5 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x410 DUP6 DUP6 DUP6 DUP5 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B9 CALLER DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x51A SWAP1 PUSH2 0x1066 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x546 SWAP1 PUSH2 0x1066 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x593 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x568 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x593 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x576 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x659 SWAP1 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x678 CALLER DUP6 DUP6 DUP5 PUSH2 0x673 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x690 CALLER DUP5 DUP5 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x788 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x95C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x953 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA49 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH2 0xA5E SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB6F DUP2 PUSH2 0x1335 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB84 DUP2 PUSH2 0x134C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xB9F PUSH2 0x10F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBAE DUP5 DUP3 DUP6 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCE JUMPI PUSH2 0xBCD PUSH2 0x10F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDC DUP6 DUP3 DUP7 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBED DUP6 DUP3 DUP7 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC10 JUMPI PUSH2 0xC0F PUSH2 0x10F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC1E DUP7 DUP3 DUP8 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC2F DUP7 DUP3 DUP8 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC40 DUP7 DUP3 DUP8 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC61 JUMPI PUSH2 0xC60 PUSH2 0x10F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC6F DUP6 DUP3 DUP7 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC80 DUP6 DUP3 DUP7 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC93 DUP2 PUSH2 0xFF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA4 DUP3 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0xCAE DUP2 DUP6 PUSH2 0xF43 JUMP JUMPDEST SWAP4 POP PUSH2 0xCBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0xCC7 DUP2 PUSH2 0x10FB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDF PUSH1 0x23 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xCEA DUP3 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD02 PUSH1 0x22 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xD0D DUP3 PUSH2 0x115B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD25 PUSH1 0x26 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xD30 DUP3 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD48 PUSH1 0x28 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xD53 DUP3 PUSH2 0x11F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6B PUSH1 0x25 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xD76 DUP3 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8E PUSH1 0x24 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xD99 DUP3 PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB1 PUSH1 0x25 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xDBC DUP3 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD0 DUP2 PUSH2 0x101C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDDF DUP2 PUSH2 0x1026 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1A DUP2 DUP5 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE3B DUP2 PUSH2 0xCD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE5B DUP2 PUSH2 0xCF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7B DUP2 PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE9B DUP2 PUSH2 0xD3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEBB DUP2 PUSH2 0xD5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDB DUP2 PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEFB DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF17 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF32 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP3 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0xF6A DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xF9F JUMPI PUSH2 0xF9E PUSH2 0x1098 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB5 DUP3 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0xFC0 DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0x1098 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE9 DUP3 PUSH2 0xFFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1051 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1036 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1060 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x107E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0x10C7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x133E DUP2 PUSH2 0xFDE JUMP JUMPDEST DUP2 EQ PUSH2 0x1349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1355 DUP2 PUSH2 0x101C JUMP JUMPDEST DUP2 EQ PUSH2 0x1360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xC9 0xC0 0xCC COINBASE DUP13 0xFC RETURNDATACOPY 0xA6 0xA7 0xA9 0xBC 0xBA 0x2A 0xEE EXTCODEHASH GT 0xB1 RETURN 0xDD 0xC1 0xDE MULMOD GAS PUSH3 0xDDB961 0xB9 SWAP5 SWAP7 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "89:7959:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowance_110": {
									"entryPoint": 1690,
									"id": 110,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_131": {
									"entryPoint": 776,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_71": {
									"entryPoint": 1219,
									"id": 71,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_47": {
									"entryPoint": 1052,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_241": {
									"entryPoint": 1437,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@doApprove_441": {
									"entryPoint": 1825,
									"id": 441,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@doTransfer_305": {
									"entryPoint": 2284,
									"id": 305,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@increaseAllowance_203": {
									"entryPoint": 1061,
									"id": 203,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_29": {
									"entryPoint": 630,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_38": {
									"entryPoint": 1291,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_57": {
									"entryPoint": 799,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_176": {
									"entryPoint": 809,
									"id": 176,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_92": {
									"entryPoint": 1667,
									"id": 92,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4147,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 4443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 4759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 4838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14106:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													}
												],
												"src": "152:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:2"
															},
															"nodeType": "YulIf",
															"src": "373:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:2",
														"type": ""
													}
												],
												"src": "297:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:2"
															},
															"nodeType": "YulIf",
															"src": "725:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:2",
														"type": ""
													}
												],
												"src": "632:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:2"
															},
															"nodeType": "YulIf",
															"src": "1222:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:2",
														"type": ""
													}
												],
												"src": "1112:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:2"
															},
															"nodeType": "YulIf",
															"src": "1830:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:2",
														"type": ""
													}
												],
												"src": "1737:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:2",
														"type": ""
													}
												],
												"src": "2217:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:2",
														"type": ""
													}
												],
												"src": "2332:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:2",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2865:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "2941:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2836:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:2",
														"type": ""
													}
												],
												"src": "2702:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3230:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3237:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3402:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "3313:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3415:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3426:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3422:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3415:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3208:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3216:3:2",
														"type": ""
													}
												],
												"src": "3074:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3668:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:2",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3609:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3774:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "3685:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3798:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3794:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3580:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3588:3:2",
														"type": ""
													}
												],
												"src": "3446:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4040:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:2",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3981:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4146:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																	"nodeType": "YulIdentifier",
																	"src": "4057:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4170:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3960:3:2",
														"type": ""
													}
												],
												"src": "3818:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4346:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4412:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4417:2:2",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4353:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4518:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "4429:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4538:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4538:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4324:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4332:3:2",
														"type": ""
													}
												],
												"src": "4190:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4708:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4718:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4725:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4718:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4890:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "4801:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4903:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4914:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4696:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4704:3:2",
														"type": ""
													}
												],
												"src": "4562:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5080:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5090:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:2",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5097:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5262:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "5173:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5173:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5275:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5286:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5291:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5068:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5076:3:2",
														"type": ""
													}
												],
												"src": "4934:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5371:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5388:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5411:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5393:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5393:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5381:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5359:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5366:3:2",
														"type": ""
													}
												],
												"src": "5306:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5529:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5513:15:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5513:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5501:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5501:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5479:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5486:3:2",
														"type": ""
													}
												],
												"src": "5430:112:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5640:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5650:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5662:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5673:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5658:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5650:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5724:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5686:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5686:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5612:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5624:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5635:4:2",
														"type": ""
													}
												],
												"src": "5548:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5882:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5892:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5904:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5915:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5900:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5900:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5892:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5939:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5950:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5935:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5935:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5958:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5964:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5954:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5928:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5928:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5984:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6056:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6065:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5992:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5984:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5854:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5866:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5877:4:2",
														"type": ""
													}
												],
												"src": "5764:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6264:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6276:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6264:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6311:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6322:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6307:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6330:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6326:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6300:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6300:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6300:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6356:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6490:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6364:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6356:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6234:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6249:4:2",
														"type": ""
													}
												],
												"src": "6083:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6679:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6689:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6701:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6689:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6736:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6747:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6732:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6755:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6761:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6751:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6751:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6725:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6725:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6725:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6781:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6915:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6789:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6781:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6659:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6674:4:2",
														"type": ""
													}
												],
												"src": "6508:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7104:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7114:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7126:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7114:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7161:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7172:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7157:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7157:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7180:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7186:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7176:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7150:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7206:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7340:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7214:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7214:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7206:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7084:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7099:4:2",
														"type": ""
													}
												],
												"src": "6933:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7529:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7539:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7551:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7539:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7586:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7597:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7582:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7582:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7605:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7611:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7601:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7601:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7575:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7575:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7575:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7631:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7765:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7639:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7631:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7509:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7524:4:2",
														"type": ""
													}
												],
												"src": "7358:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7954:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7964:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7976:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7987:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7972:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7972:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7964:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8011:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8022:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8007:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8007:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8030:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8036:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8026:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8026:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8000:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8056:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8190:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8064:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8056:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7934:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7949:4:2",
														"type": ""
													}
												],
												"src": "7783:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8379:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8389:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8401:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8412:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8397:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8389:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8436:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8447:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8455:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8451:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8451:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8425:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8481:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8615:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8489:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8489:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8481:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8359:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8374:4:2",
														"type": ""
													}
												],
												"src": "8208:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8804:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8814:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8826:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8837:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8822:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8822:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8814:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8861:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8857:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8880:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8886:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8876:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8876:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8850:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8850:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8850:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8906:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9040:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8914:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8906:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8784:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8799:4:2",
														"type": ""
													}
												],
												"src": "8633:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9156:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9166:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9178:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9189:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9174:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9174:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9166:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9246:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9259:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9270:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9255:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9255:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9202:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9202:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9202:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9128:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9140:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9151:4:2",
														"type": ""
													}
												],
												"src": "9058:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9380:120:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9390:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9402:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9413:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9398:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9390:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9466:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9479:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9490:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9475:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9475:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9426:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9426:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9352:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9364:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9375:4:2",
														"type": ""
													}
												],
												"src": "9286:214:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9546:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9556:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9572:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9566:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9539:6:2",
														"type": ""
													}
												],
												"src": "9506:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9646:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9657:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9673:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9667:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9667:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9657:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9629:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9639:6:2",
														"type": ""
													}
												],
												"src": "9587:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9788:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9805:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9810:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9798:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9798:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9826:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9845:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9850:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9841:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9841:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9826:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9760:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9765:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9776:11:2",
														"type": ""
													}
												],
												"src": "9692:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9911:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9921:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9944:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9926:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9921:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9955:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9978:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9960:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9960:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9955:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10118:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10120:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10120:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10120:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10039:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10046:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10114:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10042:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10042:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10036:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10036:81:2"
															},
															"nodeType": "YulIf",
															"src": "10033:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10150:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10161:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10164:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10157:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9898:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9901:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9907:3:2",
														"type": ""
													}
												],
												"src": "9867:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10223:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10233:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10256:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10238:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10238:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10233:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10267:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10290:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10272:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10272:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10267:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10314:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10316:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10316:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10316:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10308:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10311:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10305:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10305:8:2"
															},
															"nodeType": "YulIf",
															"src": "10302:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10346:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10358:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10361:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10354:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10354:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10346:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10209:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10212:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10218:4:2",
														"type": ""
													}
												],
												"src": "10178:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10420:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10430:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10459:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10441:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10441:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10430:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10402:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10412:7:2",
														"type": ""
													}
												],
												"src": "10375:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10519:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10529:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10554:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10547:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10547:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10540:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10540:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10529:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10501:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10511:7:2",
														"type": ""
													}
												],
												"src": "10477:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10618:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10628:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10643:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10650:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10639:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10639:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10628:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10600:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10610:7:2",
														"type": ""
													}
												],
												"src": "10573:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10750:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10760:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10771:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10760:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10732:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10742:7:2",
														"type": ""
													}
												],
												"src": "10705:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10831:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10841:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10856:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10863:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10852:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10852:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10841:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10813:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10823:7:2",
														"type": ""
													}
												],
												"src": "10788:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10929:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10939:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10948:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10943:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11008:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11033:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11038:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11029:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11029:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11052:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11057:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11048:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11048:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11042:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11042:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11022:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11022:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11022:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10969:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10972:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10966:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10966:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10980:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10982:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10991:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10994:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10987:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10987:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10982:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10962:3:2",
																"statements": []
															},
															"src": "10958:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11105:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11155:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11160:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11151:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11151:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11169:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11144:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11144:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11144:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11086:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11089:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11083:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11083:13:2"
															},
															"nodeType": "YulIf",
															"src": "11080:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10911:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10916:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10921:6:2",
														"type": ""
													}
												],
												"src": "10880:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11244:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11254:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11268:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11274:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11264:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11264:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11254:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11285:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11315:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11321:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11311:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11311:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11289:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11362:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11376:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11390:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11398:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11386:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11386:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11376:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11342:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11335:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11335:26:2"
															},
															"nodeType": "YulIf",
															"src": "11332:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11465:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11479:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11479:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11479:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11429:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11452:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11460:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11449:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11449:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11426:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11426:38:2"
															},
															"nodeType": "YulIf",
															"src": "11423:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11228:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11237:6:2",
														"type": ""
													}
												],
												"src": "11193:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11547:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11564:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11567:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11557:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11557:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11557:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11661:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11664:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11654:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11654:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11654:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11685:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11688:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11678:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11678:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11678:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11519:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11733:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11750:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11753:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11743:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11743:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11743:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11847:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11850:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11840:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11840:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11840:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11871:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11874:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11864:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11864:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11864:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11705:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11980:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11997:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12000:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11990:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11990:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11990:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11891:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12103:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12120:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12123:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12113:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12113:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12113:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "12014:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12185:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12195:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12213:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12220:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12209:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12209:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12229:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12225:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12225:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12205:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12205:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12195:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12168:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12178:6:2",
														"type": ""
													}
												],
												"src": "12137:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12351:116:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12373:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12381:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12369:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12369:14:2"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12385:34:2",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12362:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12362:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12362:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12441:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12449:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12437:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12437:15:2"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12454:5:2",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12430:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12430:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12430:30:2"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12343:6:2",
														"type": ""
													}
												],
												"src": "12245:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12579:115:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12601:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12609:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12597:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12597:14:2"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12613:34:2",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12590:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12590:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12590:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12669:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12677:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12665:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12665:15:2"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12682:4:2",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12658:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12658:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12658:29:2"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12571:6:2",
														"type": ""
													}
												],
												"src": "12473:221:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12806:119:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12828:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12836:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12824:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12824:14:2"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12840:34:2",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12817:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12817:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12817:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12896:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12904:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12892:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12892:15:2"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12909:8:2",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12885:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12885:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12885:33:2"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12798:6:2",
														"type": ""
													}
												],
												"src": "12700:225:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13037:121:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13059:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13067:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13055:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13055:14:2"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13071:34:2",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13048:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13048:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13048:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13127:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13135:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13123:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13123:15:2"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13140:10:2",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13116:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13116:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13116:35:2"
														}
													]
												},
												"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13029:6:2",
														"type": ""
													}
												],
												"src": "12931:227:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13270:118:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13292:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13300:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13288:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13288:14:2"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13304:34:2",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13281:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13281:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13281:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13360:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13368:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13356:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13356:15:2"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13373:7:2",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13349:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13349:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13349:32:2"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13262:6:2",
														"type": ""
													}
												],
												"src": "13164:224:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13500:117:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13522:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13530:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13518:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13518:14:2"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13534:34:2",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13511:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13511:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13511:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13590:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13598:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13586:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13586:15:2"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13603:6:2",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13579:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13579:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13579:31:2"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13492:6:2",
														"type": ""
													}
												],
												"src": "13394:223:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13729:118:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13751:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13759:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13747:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13747:14:2"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13763:34:2",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13740:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13740:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13740:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13819:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13827:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13815:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13815:15:2"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13832:7:2",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13808:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13808:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13808:32:2"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13721:6:2",
														"type": ""
													}
												],
												"src": "13623:224:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13896:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13953:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13962:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13965:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13955:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13955:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13955:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13919:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13944:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13926:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13926:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13916:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13916:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13909:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13909:43:2"
															},
															"nodeType": "YulIf",
															"src": "13906:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13889:5:2",
														"type": ""
													}
												],
												"src": "13853:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14024:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14081:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14090:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14093:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14083:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14083:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14083:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14047:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14072:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14054:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14054:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14044:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14044:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14037:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14037:43:2"
															},
															"nodeType": "YulIf",
															"src": "14034:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14017:5:2",
														"type": ""
													}
												],
												"src": "13981:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e00565b60405180910390f35b6100e660048036038101906100e19190610c4a565b610308565b6040516100f39190610de5565b60405180910390f35b61010461031f565b6040516101119190610f02565b60405180910390f35b610134600480360381019061012f9190610bf7565b610329565b6040516101419190610de5565b60405180910390f35b61015261041c565b60405161015f9190610f1d565b60405180910390f35b610182600480360381019061017d9190610c4a565b610425565b60405161018f9190610de5565b60405180910390f35b6101b260048036038101906101ad9190610b8a565b6104c3565b6040516101bf9190610f02565b60405180910390f35b6101d061050b565b6040516101dd9190610e00565b60405180910390f35b61020060048036038101906101fb9190610c4a565b61059d565b60405161020d9190610de5565b60405180910390f35b610230600480360381019061022b9190610c4a565b610683565b60405161023d9190610de5565b60405180910390f35b610260600480360381019061025b9190610bb7565b61069a565b60405161026d9190610f02565b60405180910390f35b60606003805461028590611066565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611066565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000610315338484610721565b6001905092915050565b6000600254905090565b60006103368484846108ec565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610e82565b60405180910390fd5b6104108585858461040b9190610faa565b610721565b60019150509392505050565b60006012905090565b60006104b9338484600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104b49190610f54565b610721565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461051a90611066565b80601f016020809104026020016040519081016040528092919081815260200182805461054690611066565b80156105935780601f1061056857610100808354040283529160200191610593565b820191906000526020600020905b81548152906001019060200180831161057657829003601f168201915b5050505050905090565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610662576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065990610ee2565b60405180910390fd5b610678338585846106739190610faa565b610721565b600191505092915050565b60006106903384846108ec565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890610ec2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890610e42565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108df9190610f02565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561095c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095390610ea2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c390610e22565b60405180910390fd5b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4990610e62565b60405180910390fd5b8181610a5e9190610faa565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aee9190610f54565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b529190610f02565b60405180910390a350505050565b600081359050610b6f81611335565b92915050565b600081359050610b848161134c565b92915050565b600060208284031215610ba057610b9f6110f6565b5b6000610bae84828501610b60565b91505092915050565b60008060408385031215610bce57610bcd6110f6565b5b6000610bdc85828601610b60565b9250506020610bed85828601610b60565b9150509250929050565b600080600060608486031215610c1057610c0f6110f6565b5b6000610c1e86828701610b60565b9350506020610c2f86828701610b60565b9250506040610c4086828701610b75565b9150509250925092565b60008060408385031215610c6157610c606110f6565b5b6000610c6f85828601610b60565b9250506020610c8085828601610b75565b9150509250929050565b610c9381610ff0565b82525050565b6000610ca482610f38565b610cae8185610f43565b9350610cbe818560208601611033565b610cc7816110fb565b840191505092915050565b6000610cdf602383610f43565b9150610cea8261110c565b604082019050919050565b6000610d02602283610f43565b9150610d0d8261115b565b604082019050919050565b6000610d25602683610f43565b9150610d30826111aa565b604082019050919050565b6000610d48602883610f43565b9150610d53826111f9565b604082019050919050565b6000610d6b602583610f43565b9150610d7682611248565b604082019050919050565b6000610d8e602483610f43565b9150610d9982611297565b604082019050919050565b6000610db1602583610f43565b9150610dbc826112e6565b604082019050919050565b610dd08161101c565b82525050565b610ddf81611026565b82525050565b6000602082019050610dfa6000830184610c8a565b92915050565b60006020820190508181036000830152610e1a8184610c99565b905092915050565b60006020820190508181036000830152610e3b81610cd2565b9050919050565b60006020820190508181036000830152610e5b81610cf5565b9050919050565b60006020820190508181036000830152610e7b81610d18565b9050919050565b60006020820190508181036000830152610e9b81610d3b565b9050919050565b60006020820190508181036000830152610ebb81610d5e565b9050919050565b60006020820190508181036000830152610edb81610d81565b9050919050565b60006020820190508181036000830152610efb81610da4565b9050919050565b6000602082019050610f176000830184610dc7565b92915050565b6000602082019050610f326000830184610dd6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f5f8261101c565b9150610f6a8361101c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f9f57610f9e611098565b5b828201905092915050565b6000610fb58261101c565b9150610fc08361101c565b925082821015610fd357610fd2611098565b5b828203905092915050565b6000610fe982610ffc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611051578082015181840152602081019050611036565b83811115611060576000848401525b50505050565b6000600282049050600182168061107e57607f821691505b60208210811415611092576110916110c7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133e81610fde565b811461134957600080fd5b50565b6113558161101c565b811461136057600080fd5b5056fea264697066735822122083c9c0cc418cfc3ea6a7a9bcba2aee3f11b1f3ddc1de095a62ddb961b99496c164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x31F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x1066 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x1066 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315 CALLER DUP5 DUP5 PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336 DUP5 DUP5 DUP5 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x410 DUP6 DUP6 DUP6 DUP5 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B9 CALLER DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x51A SWAP1 PUSH2 0x1066 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x546 SWAP1 PUSH2 0x1066 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x593 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x568 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x593 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x576 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x659 SWAP1 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x678 CALLER DUP6 DUP6 DUP5 PUSH2 0x673 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x690 CALLER DUP5 DUP5 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x788 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x95C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x953 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA49 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH2 0xA5E SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB6F DUP2 PUSH2 0x1335 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB84 DUP2 PUSH2 0x134C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xB9F PUSH2 0x10F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBAE DUP5 DUP3 DUP6 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCE JUMPI PUSH2 0xBCD PUSH2 0x10F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDC DUP6 DUP3 DUP7 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBED DUP6 DUP3 DUP7 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC10 JUMPI PUSH2 0xC0F PUSH2 0x10F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC1E DUP7 DUP3 DUP8 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC2F DUP7 DUP3 DUP8 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC40 DUP7 DUP3 DUP8 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC61 JUMPI PUSH2 0xC60 PUSH2 0x10F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC6F DUP6 DUP3 DUP7 ADD PUSH2 0xB60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC80 DUP6 DUP3 DUP7 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC93 DUP2 PUSH2 0xFF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA4 DUP3 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0xCAE DUP2 DUP6 PUSH2 0xF43 JUMP JUMPDEST SWAP4 POP PUSH2 0xCBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0xCC7 DUP2 PUSH2 0x10FB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDF PUSH1 0x23 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xCEA DUP3 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD02 PUSH1 0x22 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xD0D DUP3 PUSH2 0x115B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD25 PUSH1 0x26 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xD30 DUP3 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD48 PUSH1 0x28 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xD53 DUP3 PUSH2 0x11F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6B PUSH1 0x25 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xD76 DUP3 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8E PUSH1 0x24 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xD99 DUP3 PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB1 PUSH1 0x25 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xDBC DUP3 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD0 DUP2 PUSH2 0x101C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDDF DUP2 PUSH2 0x1026 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1A DUP2 DUP5 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE3B DUP2 PUSH2 0xCD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE5B DUP2 PUSH2 0xCF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7B DUP2 PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE9B DUP2 PUSH2 0xD3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEBB DUP2 PUSH2 0xD5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDB DUP2 PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEFB DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF17 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF32 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP3 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0xF6A DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xF9F JUMPI PUSH2 0xF9E PUSH2 0x1098 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB5 DUP3 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0xFC0 DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0x1098 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE9 DUP3 PUSH2 0xFFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1051 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1036 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1060 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x107E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0x10C7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x133E DUP2 PUSH2 0xFDE JUMP JUMPDEST DUP2 EQ PUSH2 0x1349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1355 DUP2 PUSH2 0x101C JUMP JUMPDEST DUP2 EQ PUSH2 0x1360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xC9 0xC0 0xCC COINBASE DUP13 0xFC RETURNDATACOPY 0xA6 0xA7 0xA9 0xBC 0xBA 0x2A 0xEE EXTCODEHASH GT 0xB1 RETURN 0xDD 0xC1 0xDE MULMOD GAS PUSH3 0xDDB961 0xB9 SWAP5 SWAP7 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "89:7959:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2488:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1478:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3120:410;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1336:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3925:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1646:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;615:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4620:367;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1973:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2202:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;409:93;454:13;486:9;479:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:93;:::o;2488:165::-;2571:4;2587:38;2597:10;2609:7;2618:6;2587:9;:38::i;:::-;2642:4;2635:11;;2488:165;;;;:::o;1478:110::-;1539:7;1565:16;;1558:23;;1478:110;:::o;3120:410::-;3226:4;3243:37;3254:6;3262:9;3273:6;3243:10;:37::i;:::-;3291:24;3318:10;:18;3329:6;3318:18;;;;;;;;;;;;;;;:29;3337:9;3318:29;;;;;;;;;;;;;;;;3291:56;;3385:6;3365:16;:26;;3357:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3446:55;3456:6;3464:9;3494:6;3475:16;:25;;;;:::i;:::-;3446:9;:55::i;:::-;3519:4;3512:11;;;3120:410;;;;;:::o;1336:82::-;1385:5;1409:2;1402:9;;1336:82;:::o;3925:208::-;4013:4;4029:76;4039:10;4051:7;4094:10;4060;:22;4071:10;4060:22;;;;;;;;;;;;;;;:31;4083:7;4060:31;;;;;;;;;;;;;;;;:44;;;;:::i;:::-;4029:9;:76::i;:::-;4122:4;4115:11;;3925:208;;;;:::o;1646:124::-;1720:7;1746:8;:17;1755:7;1746:17;;;;;;;;;;;;;;;;1739:24;;1646:124;;;:::o;615:97::-;662:13;694:11;687:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:97;:::o;4620:367::-;4713:4;4729:24;4756:10;:22;4767:10;4756:22;;;;;;;;;;;;;;;:31;4779:7;4756:31;;;;;;;;;;;;;;;;4729:58;;4825:15;4805:16;:35;;4797:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4892:66;4902:10;4914:7;4942:15;4923:16;:34;;;;:::i;:::-;4892:9;:66::i;:::-;4976:4;4969:11;;;4620:367;;;;:::o;1973:171::-;2059:4;2075:41;2086:10;2098:9;2109:6;2075:10;:41::i;:::-;2133:4;2126:11;;1973:171;;;;:::o;2202:148::-;2291:7;2317:10;:17;2328:5;2317:17;;;;;;;;;;;;;;;:26;2335:7;2317:26;;;;;;;;;;;;;;;;2310:33;;2202:148;;;;:::o;7705:340::-;7824:1;7807:19;;:5;:19;;;;7799:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7904:1;7885:21;;:7;:21;;;;7877:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7985:6;7956:10;:17;7967:5;7956:17;;;;;;;;;;;;;;;:26;7974:7;7956:26;;;;;;;;;;;;;;;:35;;;;8022:7;8006:32;;8015:5;8006:32;;;8031:6;8006:32;;;;;;:::i;:::-;;;;;;;;7705:340;;;:::o;5461:533::-;5586:1;5568:20;;:6;:20;;;;5560:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5669:1;5648:23;;:9;:23;;;;5640:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5722:21;5746:8;:16;5755:6;5746:16;;;;;;;;;;;;;;;;5722:40;;5797:6;5780:13;:23;;5772:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;5891:6;5875:13;:22;;;;:::i;:::-;5856:8;:16;5865:6;5856:16;;;;;;;;;;;;;;;:41;;;;5930:6;5907:8;:19;5916:9;5907:19;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;5968:9;5951:35;;5960:6;5951:35;;;5979:6;5951:35;;;;;;:::i;:::-;;;;;;;;5549:445;5461:533;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3074:366;;;:::o;3446:::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3446:366;;;:::o;3818:::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3818:366;;;:::o;4190:::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4190:366;;;:::o;4562:::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4562:366;;;:::o;4934:::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;4934:366;;;:::o;5306:118::-;5393:24;5411:5;5393:24;:::i;:::-;5388:3;5381:37;5306:118;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5430:112;;:::o;5548:210::-;5635:4;5673:2;5662:9;5658:18;5650:26;;5686:65;5748:1;5737:9;5733:17;5724:6;5686:65;:::i;:::-;5548:210;;;;:::o;5764:313::-;5877:4;5915:2;5904:9;5900:18;5892:26;;5964:9;5958:4;5954:20;5950:1;5939:9;5935:17;5928:47;5992:78;6065:4;6056:6;5992:78;:::i;:::-;5984:86;;5764:313;;;;:::o;6083:419::-;6249:4;6287:2;6276:9;6272:18;6264:26;;6336:9;6330:4;6326:20;6322:1;6311:9;6307:17;6300:47;6364:131;6490:4;6364:131;:::i;:::-;6356:139;;6083:419;;;:::o;6508:::-;6674:4;6712:2;6701:9;6697:18;6689:26;;6761:9;6755:4;6751:20;6747:1;6736:9;6732:17;6725:47;6789:131;6915:4;6789:131;:::i;:::-;6781:139;;6508:419;;;:::o;6933:::-;7099:4;7137:2;7126:9;7122:18;7114:26;;7186:9;7180:4;7176:20;7172:1;7161:9;7157:17;7150:47;7214:131;7340:4;7214:131;:::i;:::-;7206:139;;6933:419;;;:::o;7358:::-;7524:4;7562:2;7551:9;7547:18;7539:26;;7611:9;7605:4;7601:20;7597:1;7586:9;7582:17;7575:47;7639:131;7765:4;7639:131;:::i;:::-;7631:139;;7358:419;;;:::o;7783:::-;7949:4;7987:2;7976:9;7972:18;7964:26;;8036:9;8030:4;8026:20;8022:1;8011:9;8007:17;8000:47;8064:131;8190:4;8064:131;:::i;:::-;8056:139;;7783:419;;;:::o;8208:::-;8374:4;8412:2;8401:9;8397:18;8389:26;;8461:9;8455:4;8451:20;8447:1;8436:9;8432:17;8425:47;8489:131;8615:4;8489:131;:::i;:::-;8481:139;;8208:419;;;:::o;8633:::-;8799:4;8837:2;8826:9;8822:18;8814:26;;8886:9;8880:4;8876:20;8872:1;8861:9;8857:17;8850:47;8914:131;9040:4;8914:131;:::i;:::-;8906:139;;8633:419;;;:::o;9058:222::-;9151:4;9189:2;9178:9;9174:18;9166:26;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9058:222;;;;:::o;9286:214::-;9375:4;9413:2;9402:9;9398:18;9390:26;;9426:67;9490:1;9479:9;9475:17;9466:6;9426:67;:::i;:::-;9286:214;;;;:::o;9587:99::-;9639:6;9673:5;9667:12;9657:22;;9587:99;;;:::o;9692:169::-;9776:11;9810:6;9805:3;9798:19;9850:4;9845:3;9841:14;9826:29;;9692:169;;;;:::o;9867:305::-;9907:3;9926:20;9944:1;9926:20;:::i;:::-;9921:25;;9960:20;9978:1;9960:20;:::i;:::-;9955:25;;10114:1;10046:66;10042:74;10039:1;10036:81;10033:107;;;10120:18;;:::i;:::-;10033:107;10164:1;10161;10157:9;10150:16;;9867:305;;;;:::o;10178:191::-;10218:4;10238:20;10256:1;10238:20;:::i;:::-;10233:25;;10272:20;10290:1;10272:20;:::i;:::-;10267:25;;10311:1;10308;10305:8;10302:34;;;10316:18;;:::i;:::-;10302:34;10361:1;10358;10354:9;10346:17;;10178:191;;;;:::o;10375:96::-;10412:7;10441:24;10459:5;10441:24;:::i;:::-;10430:35;;10375:96;;;:::o;10477:90::-;10511:7;10554:5;10547:13;10540:21;10529:32;;10477:90;;;:::o;10573:126::-;10610:7;10650:42;10643:5;10639:54;10628:65;;10573:126;;;:::o;10705:77::-;10742:7;10771:5;10760:16;;10705:77;;;:::o;10788:86::-;10823:7;10863:4;10856:5;10852:16;10841:27;;10788:86;;;:::o;10880:307::-;10948:1;10958:113;10972:6;10969:1;10966:13;10958:113;;;11057:1;11052:3;11048:11;11042:18;11038:1;11033:3;11029:11;11022:39;10994:2;10991:1;10987:10;10982:15;;10958:113;;;11089:6;11086:1;11083:13;11080:101;;;11169:1;11160:6;11155:3;11151:16;11144:27;11080:101;10929:258;10880:307;;;:::o;11193:320::-;11237:6;11274:1;11268:4;11264:12;11254:22;;11321:1;11315:4;11311:12;11342:18;11332:81;;11398:4;11390:6;11386:17;11376:27;;11332:81;11460:2;11452:6;11449:14;11429:18;11426:38;11423:84;;;11479:18;;:::i;:::-;11423:84;11244:269;11193:320;;;:::o;11519:180::-;11567:77;11564:1;11557:88;11664:4;11661:1;11654:15;11688:4;11685:1;11678:15;11705:180;11753:77;11750:1;11743:88;11850:4;11847:1;11840:15;11874:4;11871:1;11864:15;12014:117;12123:1;12120;12113:12;12137:102;12178:6;12229:2;12225:7;12220:2;12213:5;12209:14;12205:28;12195:38;;12137:102;;;:::o;12245:222::-;12385:34;12381:1;12373:6;12369:14;12362:58;12454:5;12449:2;12441:6;12437:15;12430:30;12245:222;:::o;12473:221::-;12613:34;12609:1;12601:6;12597:14;12590:58;12682:4;12677:2;12669:6;12665:15;12658:29;12473:221;:::o;12700:225::-;12840:34;12836:1;12828:6;12824:14;12817:58;12909:8;12904:2;12896:6;12892:15;12885:33;12700:225;:::o;12931:227::-;13071:34;13067:1;13059:6;13055:14;13048:58;13140:10;13135:2;13127:6;13123:15;13116:35;12931:227;:::o;13164:224::-;13304:34;13300:1;13292:6;13288:14;13281:58;13373:7;13368:2;13360:6;13356:15;13349:32;13164:224;:::o;13394:223::-;13534:34;13530:1;13522:6;13518:14;13511:58;13603:6;13598:2;13590:6;13586:15;13579:31;13394:223;:::o;13623:224::-;13763:34;13759:1;13751:6;13747:14;13740:58;13832:7;13827:2;13819:6;13815:15;13808:32;13623:224;:::o;13853:122::-;13926:24;13944:5;13926:24;:::i;:::-;13919:5;13916:35;13906:63;;13965:1;13962;13955:12;13906:63;13853:122;:::o;13981:::-;14054:24;14072:5;14054:24;:::i;:::-;14047:5;14044:35;14034:63;;14093:1;14090;14083:12;14034:63;13981:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1003400",
								"executionCost": "1041",
								"totalCost": "1004441"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"burn(address,uint256)": "infinite",
								"doApprove(address,address,uint256)": "infinite",
								"doTransfer(address,address,uint256)": "infinite",
								"mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 89,
									"end": 8048,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 8048,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083c9c0cc418cfc3ea6a7a9bcba2aee3f11b1f3ddc1de095a62ddb961b99496c164736f6c63430008070033",
									".code": [
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 8048,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 409,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 486,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 479,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2597,
											"end": 2607,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2587,
											"end": 2625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2587,
											"end": 2625,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2587,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2635,
											"end": 2646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2635,
											"end": 2646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2653,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1565,
											"end": 1581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1588,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3243,
											"end": 3280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3243,
											"end": 3280,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3243,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3346,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3385,
											"end": 3391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3391,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3391,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3456,
											"end": 3462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3464,
											"end": 3473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3491,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3475,
											"end": 3500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3475,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3475,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3446,
											"end": 3501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3446,
											"end": 3501,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3446,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3523,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3512,
											"end": 3523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3512,
											"end": 3523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3512,
											"end": 3523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3530,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1402,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1418,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4039,
											"end": 4049,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4051,
											"end": 4058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4094,
											"end": 4104,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4070,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4081,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4090,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4060,
											"end": 4104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4060,
											"end": 4104,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4104,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4060,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4029,
											"end": 4105,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4029,
											"end": 4105,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4029,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4115,
											"end": 4126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4133,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1720,
											"end": 1727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1770,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 615,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 662,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 694,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 712,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4713,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4766,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4777,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4729,
											"end": 4787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4729,
											"end": 4787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4840,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4797,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4902,
											"end": 4912,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 4957,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4923,
											"end": 4939,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4892,
											"end": 4958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4892,
											"end": 4958,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4892,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4969,
											"end": 4980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4987,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2086,
											"end": 2096,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2107,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2075,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2075,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2126,
											"end": 2137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2144,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7705,
											"end": 8045,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7705,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7807,
											"end": 7826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7807,
											"end": 7826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7904,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7885,
											"end": 7906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7885,
											"end": 7906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7885,
											"end": 7892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7885,
											"end": 7906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7885,
											"end": 7906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7885,
											"end": 7906,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7885,
											"end": 7906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7877,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7985,
											"end": 7991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 7972,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7981,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7991,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8022,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8015,
											"end": 8020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8031,
											"end": 8037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8038,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 8045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 8045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 8045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 8045,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5461,
											"end": 5994,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5461,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5560,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5648,
											"end": 5671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5648,
											"end": 5671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5640,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5722,
											"end": 5743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5761,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5722,
											"end": 5762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5722,
											"end": 5762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5803,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5772,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5891,
											"end": 5897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5875,
											"end": 5897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5875,
											"end": 5897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5875,
											"end": 5897,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5875,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5871,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5872,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5897,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5916,
											"end": 5925,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 5966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5979,
											"end": 5985,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5549,
											"end": 5994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5461,
											"end": 5994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5461,
											"end": 5994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5461,
											"end": 5994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5461,
											"end": 5994,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3402,
											"end": 3405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3668,
											"end": 3671,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3794,
											"end": 3806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4040,
											"end": 4043,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 4518,
											"end": 4521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4784,
											"end": 4787,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5381,
											"end": 5418,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5529,
											"end": 5534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5501,
											"end": 5536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5635,
											"end": 5639,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5733,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5877,
											"end": 5881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5917,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5913,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5958,
											"end": 5962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5950,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5935,
											"end": 5952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5928,
											"end": 5975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6065,
											"end": 6069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6062,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5984,
											"end": 6070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5984,
											"end": 6070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6326,
											"end": 6346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6324,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6347,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6490,
											"end": 6494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6697,
											"end": 6715,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6747,
											"end": 6748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6725,
											"end": 6772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6915,
											"end": 6919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6781,
											"end": 6920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6781,
											"end": 6920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7099,
											"end": 7103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7126,
											"end": 7135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7186,
											"end": 7195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7180,
											"end": 7184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7176,
											"end": 7196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7170,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7174,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7150,
											"end": 7197,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7340,
											"end": 7344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7551,
											"end": 7560,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7539,
											"end": 7565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7539,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7611,
											"end": 7620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7621,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7595,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7575,
											"end": 7622,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7631,
											"end": 7770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7631,
											"end": 7770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7989,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7976,
											"end": 7985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 7990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8030,
											"end": 8034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8026,
											"end": 8046,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8022,
											"end": 8023,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8020,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8007,
											"end": 8024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8047,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8190,
											"end": 8194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8056,
											"end": 8195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8056,
											"end": 8195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8374,
											"end": 8378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8389,
											"end": 8415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8389,
											"end": 8415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8455,
											"end": 8459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8451,
											"end": 8471,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8432,
											"end": 8449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8425,
											"end": 8472,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 8615,
											"end": 8619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8481,
											"end": 8620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8481,
											"end": 8620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8826,
											"end": 8835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8822,
											"end": 8840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8886,
											"end": 8895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8880,
											"end": 8884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8876,
											"end": 8896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8872,
											"end": 8873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8870,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8857,
											"end": 8874,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8850,
											"end": 8897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8906,
											"end": 9045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8906,
											"end": 9045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9151,
											"end": 9155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9189,
											"end": 9191,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9178,
											"end": 9187,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9174,
											"end": 9192,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9166,
											"end": 9192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9166,
											"end": 9192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9270,
											"end": 9271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9268,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9475,
											"end": 9492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9639,
											"end": 9645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9657,
											"end": 9679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9657,
											"end": 9679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9776,
											"end": 9787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9798,
											"end": 9817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9850,
											"end": 9854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9845,
											"end": 9848,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9841,
											"end": 9855,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9826,
											"end": 9855,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9826,
											"end": 9855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9921,
											"end": 9946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9921,
											"end": 9946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9980,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10046,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10042,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10040,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10117,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10164,
											"end": 10165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10161,
											"end": 10162,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10178,
											"end": 10369,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 10178,
											"end": 10369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10218,
											"end": 10222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10256,
											"end": 10257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10238,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10238,
											"end": 10258,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10238,
											"end": 10258,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10238,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10272,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 10290,
											"end": 10291,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10272,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10272,
											"end": 10292,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10272,
											"end": 10292,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 10272,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10267,
											"end": 10292,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10267,
											"end": 10292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10311,
											"end": 10312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10308,
											"end": 10309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10305,
											"end": 10313,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10302,
											"end": 10336,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10302,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10302,
											"end": 10336,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10302,
											"end": 10336,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10302,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10361,
											"end": 10362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10358,
											"end": 10359,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10354,
											"end": 10363,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10369,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10369,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10375,
											"end": 10471,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10375,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10412,
											"end": 10419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10441,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10459,
											"end": 10464,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10441,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10441,
											"end": 10465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10441,
											"end": 10465,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10441,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10430,
											"end": 10465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10430,
											"end": 10465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10375,
											"end": 10471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10375,
											"end": 10471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10375,
											"end": 10471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10375,
											"end": 10471,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10477,
											"end": 10567,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10477,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10511,
											"end": 10518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10554,
											"end": 10559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10547,
											"end": 10560,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10561,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10529,
											"end": 10561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10529,
											"end": 10561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10477,
											"end": 10567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10477,
											"end": 10567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10477,
											"end": 10567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10477,
											"end": 10567,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10573,
											"end": 10699,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10573,
											"end": 10699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10650,
											"end": 10692,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10643,
											"end": 10648,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10639,
											"end": 10693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10573,
											"end": 10699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10573,
											"end": 10699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10573,
											"end": 10699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10573,
											"end": 10699,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10705,
											"end": 10782,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10705,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10771,
											"end": 10776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10760,
											"end": 10776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10760,
											"end": 10776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10782,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10788,
											"end": 10874,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 10788,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10823,
											"end": 10830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10863,
											"end": 10867,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 10856,
											"end": 10861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10852,
											"end": 10868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10788,
											"end": 10874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10788,
											"end": 10874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10788,
											"end": 10874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10788,
											"end": 10874,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10880,
											"end": 11187,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 10880,
											"end": 11187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10948,
											"end": 10949,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 11071,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10958,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10969,
											"end": 10970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10966,
											"end": 10979,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10958,
											"end": 11071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10958,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10958,
											"end": 11071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11057,
											"end": 11058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11055,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11048,
											"end": 11059,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11042,
											"end": 11060,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11038,
											"end": 11039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11033,
											"end": 11036,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11029,
											"end": 11040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11022,
											"end": 11061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10994,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10991,
											"end": 10992,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10987,
											"end": 10997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10982,
											"end": 10997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10982,
											"end": 10997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10958,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10958,
											"end": 11071,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10958,
											"end": 11071,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10958,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11089,
											"end": 11095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11083,
											"end": 11096,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11080,
											"end": 11181,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11080,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 11080,
											"end": 11181,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11166,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11158,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11151,
											"end": 11167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11144,
											"end": 11171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11080,
											"end": 11181,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 11080,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10929,
											"end": 11187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 11187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 11187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 11187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 11187,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11193,
											"end": 11513,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 11193,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11237,
											"end": 11243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11274,
											"end": 11275,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11268,
											"end": 11272,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11276,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11254,
											"end": 11276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11254,
											"end": 11276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11321,
											"end": 11322,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11315,
											"end": 11319,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11332,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 11332,
											"end": 11413,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11398,
											"end": 11402,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 11390,
											"end": 11396,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11386,
											"end": 11403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11376,
											"end": 11403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11376,
											"end": 11403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11332,
											"end": 11413,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 11332,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11460,
											"end": 11462,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11452,
											"end": 11458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11449,
											"end": 11463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11429,
											"end": 11447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11426,
											"end": 11464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11507,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 11423,
											"end": 11507,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11507,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 11423,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11193,
											"end": 11513,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11193,
											"end": 11513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11193,
											"end": 11513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11193,
											"end": 11513,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11519,
											"end": 11699,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 11519,
											"end": 11699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11567,
											"end": 11644,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11564,
											"end": 11565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11557,
											"end": 11645,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11664,
											"end": 11668,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 11661,
											"end": 11662,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11654,
											"end": 11669,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11688,
											"end": 11692,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11685,
											"end": 11686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11678,
											"end": 11693,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11705,
											"end": 11885,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 11705,
											"end": 11885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11753,
											"end": 11830,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11750,
											"end": 11751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11743,
											"end": 11831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11850,
											"end": 11854,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 11847,
											"end": 11848,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11840,
											"end": 11855,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11874,
											"end": 11878,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11871,
											"end": 11872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11864,
											"end": 11879,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12014,
											"end": 12131,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 12014,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12123,
											"end": 12124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12120,
											"end": 12121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12113,
											"end": 12125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12239,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 12137,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12229,
											"end": 12231,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12225,
											"end": 12232,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12220,
											"end": 12222,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12213,
											"end": 12218,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12205,
											"end": 12233,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12195,
											"end": 12233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12195,
											"end": 12233,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12239,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12245,
											"end": 12467,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 12245,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12385,
											"end": 12419,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12381,
											"end": 12382,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12373,
											"end": 12379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12369,
											"end": 12383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12362,
											"end": 12420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12454,
											"end": 12459,
											"name": "PUSH",
											"source": 2,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12449,
											"end": 12451,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12441,
											"end": 12447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12437,
											"end": 12452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12430,
											"end": 12460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12245,
											"end": 12467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12245,
											"end": 12467,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12473,
											"end": 12694,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 12473,
											"end": 12694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12613,
											"end": 12647,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 12609,
											"end": 12610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12601,
											"end": 12607,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12590,
											"end": 12648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12682,
											"end": 12686,
											"name": "PUSH",
											"source": 2,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12677,
											"end": 12679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12669,
											"end": 12675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12665,
											"end": 12680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12694,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12700,
											"end": 12925,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 12700,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12840,
											"end": 12874,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12836,
											"end": 12837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12828,
											"end": 12834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12824,
											"end": 12838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12817,
											"end": 12875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12909,
											"end": 12917,
											"name": "PUSH",
											"source": 2,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12904,
											"end": 12906,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12896,
											"end": 12902,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12892,
											"end": 12907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12885,
											"end": 12918,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12700,
											"end": 12925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12700,
											"end": 12925,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12931,
											"end": 13158,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 12931,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13071,
											"end": 13105,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 13067,
											"end": 13068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13059,
											"end": 13065,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13055,
											"end": 13069,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13140,
											"end": 13150,
											"name": "PUSH",
											"source": 2,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13135,
											"end": 13137,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13127,
											"end": 13133,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13123,
											"end": 13138,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13116,
											"end": 13151,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12931,
											"end": 13158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12931,
											"end": 13158,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13164,
											"end": 13388,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 13164,
											"end": 13388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13304,
											"end": 13338,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13300,
											"end": 13301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13292,
											"end": 13298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13288,
											"end": 13302,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13281,
											"end": 13339,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13373,
											"end": 13380,
											"name": "PUSH",
											"source": 2,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13368,
											"end": 13370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13360,
											"end": 13366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13356,
											"end": 13371,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13349,
											"end": 13381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13164,
											"end": 13388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13164,
											"end": 13388,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13394,
											"end": 13617,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 13394,
											"end": 13617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13568,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 13530,
											"end": 13531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13522,
											"end": 13528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13518,
											"end": 13532,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13511,
											"end": 13569,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13603,
											"end": 13609,
											"name": "PUSH",
											"source": 2,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13598,
											"end": 13600,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13590,
											"end": 13596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13586,
											"end": 13601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13579,
											"end": 13610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13394,
											"end": 13617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13394,
											"end": 13617,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13623,
											"end": 13847,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 13623,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13763,
											"end": 13797,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 13759,
											"end": 13760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13751,
											"end": 13757,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13747,
											"end": 13761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13740,
											"end": 13798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13832,
											"end": 13839,
											"name": "PUSH",
											"source": 2,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13827,
											"end": 13829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13819,
											"end": 13825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13815,
											"end": 13830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13808,
											"end": 13840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13623,
											"end": 13847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13623,
											"end": 13847,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13853,
											"end": 13975,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 13853,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13926,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 13944,
											"end": 13949,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13926,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 13926,
											"end": 13950,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13926,
											"end": 13950,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 13926,
											"end": 13950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13919,
											"end": 13924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13916,
											"end": 13951,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13906,
											"end": 13969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 13906,
											"end": 13969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13965,
											"end": 13966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13962,
											"end": 13963,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13955,
											"end": 13967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13906,
											"end": 13969,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 13906,
											"end": 13969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13853,
											"end": 13975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13853,
											"end": 13975,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13981,
											"end": 14103,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 13981,
											"end": 14103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 14072,
											"end": 14077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 14054,
											"end": 14078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14054,
											"end": 14078,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 14054,
											"end": 14078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14047,
											"end": 14052,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14044,
											"end": 14079,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14034,
											"end": 14097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 14034,
											"end": 14097,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14093,
											"end": 14094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14090,
											"end": 14091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14083,
											"end": 14095,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14034,
											"end": 14097,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 14034,
											"end": 14097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13981,
											"end": 14103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13981,
											"end": 14103,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xbc73c25bcbc5de34c874cb3fbdab31a6f1899702eb7c1b261170c5651dc3e224\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9360bcc0f45a4fe893def792bd85d5a5d67e907d021d6a0424de74c38f6476a\",\"dweb:/ipfs/QmNPN3Gcu6iwVktLzUx9E67rbH8ELWsTGVVGdfigmZsQjx\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc02b4175e429ac125853db3fe5cf46b35c2d58af574dafcdf172e00e85b96399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dce449a83326a2978c63b15ecc1abc3c66f3fa873a3e132b959cc9fc13229f34\",\"dweb:/ipfs/QmcL6SYT8xisVFSK1zS926J24QyNK5Juf284CzuVehgcmZ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc02b4175e429ac125853db3fe5cf46b35c2d58af574dafcdf172e00e85b96399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dce449a83326a2978c63b15ecc1abc3c66f3fa873a3e132b959cc9fc13229f34\",\"dweb:/ipfs/QmcL6SYT8xisVFSK1zS926J24QyNK5Juf284CzuVehgcmZ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							442
						],
						"IERC20": [
							519
						]
					},
					"id": 443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:0"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 443,
							"sourceUnit": 520,
							"src": "65:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 519,
										"src": "107:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "107:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 442,
							"linearizedBaseContracts": [
								442,
								519
							],
							"name": "ERC20",
							"nameLocation": "98:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "157:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "120:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 7,
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "129:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "120:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 6,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "allowances",
									"nameLocation": "229:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "171:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 13,
										"keyType": {
											"id": 9,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "180:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "171:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 12,
											"keyType": {
												"id": 10,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "200:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "191:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 11,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "211:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "totalSupplyToken",
									"nameLocation": "261:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "245:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "245:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "tokenName",
									"nameLocation": "298:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "283:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 17,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "283:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "tokenSymbol",
									"nameLocation": "328:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "313:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 19,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "313:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "469:33:0",
										"statements": [
											{
												"expression": {
													"id": 26,
													"name": "tokenName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "486:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 25,
												"id": 27,
												"nodeType": "Return",
												"src": "479:16:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "350:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "418:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "422:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "454:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 23,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "454:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "453:15:0"
									},
									"scope": 442,
									"src": "409:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "677:35:0",
										"statements": [
											{
												"expression": {
													"id": 35,
													"name": "tokenSymbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "694:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 34,
												"id": 36,
												"nodeType": "Return",
												"src": "687:18:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "508:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "624:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "662:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "662:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:15:0"
									},
									"scope": 442,
									"src": "615:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "1392:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1409:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 43,
												"id": 45,
												"nodeType": "Return",
												"src": "1402:9:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "718:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1345:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1353:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1385:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 41,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1385:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:7:0"
									},
									"scope": 442,
									"src": "1336:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										450
									],
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "1548:40:0",
										"statements": [
											{
												"expression": {
													"id": 54,
													"name": "totalSupplyToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 16,
													"src": "1565:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 53,
												"id": 55,
												"nodeType": "Return",
												"src": "1558:23:0"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1424:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1487:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 50,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1521:8:0"
									},
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1498:2:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1539:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:9:0"
									},
									"scope": 442,
									"src": "1478:110:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										458
									],
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1729:41:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 66,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1746:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 68,
													"indexExpression": {
														"id": 67,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1755:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1746:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 65,
												"id": 69,
												"nodeType": "Return",
												"src": "1739:24:0"
											}
										]
									},
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1594:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1655:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 62,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1702:8:0"
									},
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1665:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1664:17:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1720:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1719:9:0"
									},
									"scope": 442,
									"src": "1646:124:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										468
									],
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "2065:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 83,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2086:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2086:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 85,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "2098:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 86,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "2109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 82,
														"name": "doTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "2075:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "2075:41:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2133:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 81,
												"id": 90,
												"nodeType": "Return",
												"src": "2126:11:0"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1776:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1982:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 78,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2041:8:0"
									},
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1999:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1991:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2018:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2010:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1990:35:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2059:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2059:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2058:6:0"
									},
									"scope": 442,
									"src": "1973:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										478
									],
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2300:50:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 103,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "2317:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 105,
														"indexExpression": {
															"id": 104,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2328:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2317:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 107,
													"indexExpression": {
														"id": 106,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2335:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2317:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 102,
												"id": 108,
												"nodeType": "Return",
												"src": "2310:33:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "2150:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2211:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 99,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2273:8:0"
									},
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2229:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2221:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2244:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2236:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:32:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2291:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:9:0"
									},
									"scope": 442,
									"src": "2202:148:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										488
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2577:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 122,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2597:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2597:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 124,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "2609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2618:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 121,
														"name": "doApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "2587:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2587:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2587:38:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2642:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 120,
												"id": 129,
												"nodeType": "Return",
												"src": "2635:11:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "2356:127:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2497:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 117,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2553:8:0"
									},
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2513:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2505:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2530:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2522:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2504:33:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2571:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:6:0"
									},
									"scope": 442,
									"src": "2488:165:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										500
									],
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "3232:298:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 145,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3262:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "3273:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 144,
														"name": "doTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "3243:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3243:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "3243:37:0"
											},
											{
												"assignments": [
													151
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "3299:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 175,
														"src": "3291:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3291:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 157,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 152,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "3318:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 154,
														"indexExpression": {
															"id": 153,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3329:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3318:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 156,
													"indexExpression": {
														"id": 155,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "3337:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3318:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3291:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 159,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "3365:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 160,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "3385:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3365:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3393:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3357:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "3357:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3456:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 167,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3464:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 168,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "3475:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 169,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "3494:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3475:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 165,
														"name": "doApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "3446:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "3446:55:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3519:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 143,
												"id": 174,
												"nodeType": "Return",
												"src": "3512:11:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2659:456:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3129:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3208:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3150:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3142:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3166:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3158:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3185:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3177:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3141:51:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3226:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3226:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:6:0"
									},
									"scope": 442,
									"src": "3120:410:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "4019:114:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 187,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4039:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4039:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "4051:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 190,
																		"name": "allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "4060:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 193,
																	"indexExpression": {
																		"expression": {
																			"id": 191,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4071:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4071:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4060:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 195,
																"indexExpression": {
																	"id": 194,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "4083:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4060:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 196,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "4094:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4060:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 186,
														"name": "doApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "4029:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "4029:76:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4122:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 185,
												"id": 201,
												"nodeType": "Return",
												"src": "4115:11:0"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "3536:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "3934:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3960:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3952:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "3977:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3969:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3951:37:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4013:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4013:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:6:0"
									},
									"scope": 442,
									"src": "3925:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "4719:268:0",
										"statements": [
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4737:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 240,
														"src": "4729:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 213,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4729:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 215,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "4756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 218,
														"indexExpression": {
															"expression": {
																"id": 216,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4767:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4767:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4756:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 220,
													"indexExpression": {
														"id": 219,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "4779:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4756:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4729:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "4805:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 224,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "4825:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4805:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4842:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4797:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4797:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "4797:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 230,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4902:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4902:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "4914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 233,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "4923:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 234,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "4942:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4923:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "doApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "4892:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4892:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "4892:66:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4976:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 212,
												"id": 239,
												"nodeType": "Return",
												"src": "4969:11:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "4139:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4629:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4655:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4647:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "4672:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4664:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4646:42:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4713:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4713:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:6:0"
									},
									"scope": 442,
									"src": "4620:367:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "5549:445:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 252,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "5568:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5586:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5578:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 253,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5578:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5578:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5568:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5590:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5560:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "5560:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 262,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "5648:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5669:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5661:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 263,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5661:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5661:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5648:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5673:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5640:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "5640:71:0"
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "5730:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 304,
														"src": "5722:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"baseExpression": {
														"id": 273,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "5746:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "5755:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5746:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5722:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 278,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "5780:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 279,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "5797:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5780:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5805:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5772:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "5772:74:0"
											},
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 284,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "5856:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 286,
														"indexExpression": {
															"id": 285,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "5865:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5856:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 287,
															"name": "senderBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "5875:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 288,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "5891:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5875:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5856:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "5856:41:0"
											},
											{
												"expression": {
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 292,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "5907:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 294,
														"indexExpression": {
															"id": 293,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "5916:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5907:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 295,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "5930:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5907:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "5907:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 299,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "5960:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "5968:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "5979:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 298,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "5951:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5951:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "EmitStatement",
												"src": "5946:40:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "4993:463:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doTransfer",
									"nameLocation": "5470:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5489:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5481:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5505:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5497:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5524:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5516:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5480:51:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5549:0:0"
									},
									"scope": 442,
									"src": "5461:533:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "6329:209:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "6348:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6367:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6359:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 315,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6359:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6359:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6348:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6371:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6340:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6340:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "6340:65:0"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 323,
														"name": "totalSupplyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "6415:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 324,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "6435:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6415:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "6415:26:0"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "6451:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "6460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6451:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "6472:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6451:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "6451:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6511:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6503:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 334,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6503:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6503:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "6515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "6524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "6494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6494:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "EmitStatement",
												"src": "6489:42:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "6000:260:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6274:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6304:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6296:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6278:33:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6329:0:0"
									},
									"scope": 442,
									"src": "6265:273:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "6922:360:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 352,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "6941:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6960:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6952:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 353,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6952:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6952:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6941:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6964:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6933:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "6933:67:0"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "7018:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 395,
														"src": "7010:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 366,
												"initialValue": {
													"baseExpression": {
														"id": 363,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "7035:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 365,
													"indexExpression": {
														"id": 364,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "7044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7035:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7010:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 368,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "7070:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 369,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "7088:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7070:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7096:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7062:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7062:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "7062:71:0"
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 374,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "7143:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 376,
														"indexExpression": {
															"id": 375,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "7152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7143:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 377,
															"name": "accountBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "7163:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 378,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "7180:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7163:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7143:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "7143:43:0"
											},
											{
												"expression": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 382,
														"name": "totalSupplyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "7196:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 383,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7216:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7196:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "7196:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 387,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "7247:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7264:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7256:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 388,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7256:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7256:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "7268:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "7238:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7238:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "EmitStatement",
												"src": "7233:42:0"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "6544:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "6867:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6880:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "6872:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "6889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6871:33:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6922:0:0"
									},
									"scope": 442,
									"src": "6858:424:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "7789:256:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 407,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "7807:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7824:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7816:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 408,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7816:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7816:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7807:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7828:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7799:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "7799:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 417,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "7885:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7904:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 418,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7896:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7896:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7885:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7908:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7877:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7877:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "7877:68:0"
											},
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 426,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "7956:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 429,
															"indexExpression": {
																"id": 427,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "7967:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7956:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 430,
														"indexExpression": {
															"id": 428,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "7974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7956:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 431,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "7985:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7956:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "7956:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 435,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "8015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "8022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "8031:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 434,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "8006:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8006:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "EmitStatement",
												"src": "8001:37:0"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "7288:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doApprove",
									"nameLocation": "7714:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7732:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7724:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7764:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7756:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7723:48:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7789:0:0"
									},
									"scope": 442,
									"src": "7705:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 443,
							"src": "89:7959:0",
							"usedErrors": []
						}
					],
					"src": "32:8016:0"
				},
				"id": 0
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							519
						]
					},
					"id": 520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 444,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "IERC20",
							"nameLocation": "76:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "90:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "170:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "181:2:1"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "207:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:9:1"
									},
									"scope": 519,
									"src": "161:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "222:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:17:1"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "358:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:9:1"
									},
									"scope": 519,
									"src": "299:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "373:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "596:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "613:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "605:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "632:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "624:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:35:1"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "658:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "658:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:6:1"
									},
									"scope": 519,
									"src": "587:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "670:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "948:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "966:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "958:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "981:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "973:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:32:1"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1013:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:9:1"
									},
									"scope": 519,
									"src": "939:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "1028:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1684:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1700:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1692:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1717:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1709:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:33:1"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1743:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1743:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:6:1"
									},
									"scope": 519,
									"src": "1675:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "1755:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2065:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2086:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2078:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2102:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2094:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2121:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2113:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:51:1"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2147:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2147:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:6:1"
									},
									"scope": 519,
									"src": "2056:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "2159:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 509,
									"name": "Transfer",
									"nameLocation": "2328:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2353:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2337:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2337:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2375:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2359:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2387:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2379:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2379:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2336:57:1"
									},
									"src": "2322:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "2400:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 518,
									"name": "Approval",
									"nameLocation": "2559:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2584:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2568:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2568:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2607:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2591:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2624:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2616:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:63:1"
									},
									"src": "2553:78:1"
								}
							],
							"scope": 520,
							"src": "66:2567:1",
							"usedErrors": []
						}
					],
					"src": "32:2601:1"
				},
				"id": 1
			}
		}
	}
}