{
	"id": "090448605ca12d14da5bd7ef4c60e090",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TokenSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\nimport \"./IERC20.sol\";\n\ncontract TokenSwap {\n\n    IERC20 private token1;\n    address private owner1;\n    uint private amount1;\n    IERC20 private token2;\n    address private owner2;\n    uint private amount2;\n\n    constructor(\n        address _token1,\n        address _owner1,\n        uint _amount1,\n        address _token2,\n        address _owner2,\n        uint _amount2\n    ) {\n        token1 = IERC20(_token1);\n        owner1 = _owner1;\n        amount1 = _amount1;\n        token2 = IERC20(_token2);\n        owner2 = _owner2;\n        amount2 = _amount2;\n    }\n\n    function swap() public {\n        require(msg.sender == owner1 || msg.sender == owner2, \"Not authorized\");\n        // require(\n        //     token1.allowance(owner1, address(this)) >= amount1,\n        //     \"Token 1 allowance too low\"\n        // );\n        // require(\n        //     token2.allowance(owner2, address(this)) >= amount2,\n        //     \"Token 2 allowance too low\"\n        // );\n\n        _safeTransferFrom(token1, owner1, owner2, amount1);\n        _safeTransferFrom(token2, owner2, owner1, amount2);\n    }\n\n    function _safeTransferFrom(\n        IERC20 token,\n        address sender,\n        address recipient,\n        uint amount\n    ) private {\n        bool sent = token.transferFrom(sender, recipient, amount);\n        require(sent, \"Token transfer failed\");\n    }\n}"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ninterface IERC20 {\n     /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc02b4175e429ac125853db3fe5cf46b35c2d58af574dafcdf172e00e85b96399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dce449a83326a2978c63b15ecc1abc3c66f3fa873a3e132b959cc9fc13229f34\",\"dweb:/ipfs/QmcL6SYT8xisVFSK1zS926J24QyNK5Juf284CzuVehgcmZ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TokenSwap.sol": {
				"TokenSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_token2",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner2",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount2",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenSwap.sol\":89:1416  contract TokenSwap {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TokenSwap.sol\":278:625  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TokenSwap.sol\":468:475  _token1 */\n  dup6\n    /* \"contracts/TokenSwap.sol\":452:458  token1 */\n  0x00\n  dup1\n    /* \"contracts/TokenSwap.sol\":452:476  token1 = IERC20(_token1) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSwap.sol\":495:502  _owner1 */\n  dup5\n    /* \"contracts/TokenSwap.sol\":486:492  owner1 */\n  0x01\n  0x00\n    /* \"contracts/TokenSwap.sol\":486:502  owner1 = _owner1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSwap.sol\":522:530  _amount1 */\n  dup4\n    /* \"contracts/TokenSwap.sol\":512:519  amount1 */\n  0x02\n    /* \"contracts/TokenSwap.sol\":512:530  amount1 = _amount1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSwap.sol\":556:563  _token2 */\n  dup3\n    /* \"contracts/TokenSwap.sol\":540:546  token2 */\n  0x03\n  0x00\n    /* \"contracts/TokenSwap.sol\":540:564  token2 = IERC20(_token2) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSwap.sol\":583:590  _owner2 */\n  dup2\n    /* \"contracts/TokenSwap.sol\":574:580  owner2 */\n  0x04\n  0x00\n    /* \"contracts/TokenSwap.sol\":574:590  owner2 = _owner2 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSwap.sol\":610:618  _amount2 */\n  dup1\n    /* \"contracts/TokenSwap.sol\":600:607  amount2 */\n  0x05\n    /* \"contracts/TokenSwap.sol\":600:618  amount2 = _amount2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSwap.sol\":278:625  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/TokenSwap.sol\":89:1416  contract TokenSwap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_12:\n    /* \"#utility.yul\":213:218   */\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_14\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":156:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:1439   */\ntag_3:\n    /* \"#utility.yul\":420:426   */\n  0x00\n    /* \"#utility.yul\":428:434   */\n  dup1\n    /* \"#utility.yul\":436:442   */\n  0x00\n    /* \"#utility.yul\":444:450   */\n  dup1\n    /* \"#utility.yul\":452:458   */\n  0x00\n    /* \"#utility.yul\":460:466   */\n  dup1\n    /* \"#utility.yul\":509:512   */\n  0xc0\n    /* \"#utility.yul\":497:506   */\n  dup8\n    /* \"#utility.yul\":488:495   */\n  dup10\n    /* \"#utility.yul\":484:507   */\n  sub\n    /* \"#utility.yul\":480:513   */\n  slt\n    /* \"#utility.yul\":477:597   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":516:595   */\n  tag_18\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":477:597   */\ntag_17:\n    /* \"#utility.yul\":636:637   */\n  0x00\n    /* \"#utility.yul\":661:725   */\n  tag_20\n    /* \"#utility.yul\":717:724   */\n  dup10\n    /* \"#utility.yul\":708:714   */\n  dup3\n    /* \"#utility.yul\":697:706   */\n  dup11\n    /* \"#utility.yul\":693:715   */\n  add\n    /* \"#utility.yul\":661:725   */\n  tag_8\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":651:725   */\n  swap7\n  pop\n    /* \"#utility.yul\":607:735   */\n  pop\n    /* \"#utility.yul\":774:776   */\n  0x20\n    /* \"#utility.yul\":800:864   */\n  tag_21\n    /* \"#utility.yul\":856:863   */\n  dup10\n    /* \"#utility.yul\":847:853   */\n  dup3\n    /* \"#utility.yul\":836:845   */\n  dup11\n    /* \"#utility.yul\":832:854   */\n  add\n    /* \"#utility.yul\":800:864   */\n  tag_8\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":790:864   */\n  swap6\n  pop\n    /* \"#utility.yul\":745:874   */\n  pop\n    /* \"#utility.yul\":913:915   */\n  0x40\n    /* \"#utility.yul\":939:1003   */\n  tag_22\n    /* \"#utility.yul\":995:1002   */\n  dup10\n    /* \"#utility.yul\":986:992   */\n  dup3\n    /* \"#utility.yul\":975:984   */\n  dup11\n    /* \"#utility.yul\":971:993   */\n  add\n    /* \"#utility.yul\":939:1003   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":929:1003   */\n  swap5\n  pop\n    /* \"#utility.yul\":884:1013   */\n  pop\n    /* \"#utility.yul\":1052:1054   */\n  0x60\n    /* \"#utility.yul\":1078:1142   */\n  tag_23\n    /* \"#utility.yul\":1134:1141   */\n  dup10\n    /* \"#utility.yul\":1125:1131   */\n  dup3\n    /* \"#utility.yul\":1114:1123   */\n  dup11\n    /* \"#utility.yul\":1110:1132   */\n  add\n    /* \"#utility.yul\":1078:1142   */\n  tag_8\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":1068:1142   */\n  swap4\n  pop\n    /* \"#utility.yul\":1023:1152   */\n  pop\n    /* \"#utility.yul\":1191:1194   */\n  0x80\n    /* \"#utility.yul\":1218:1282   */\n  tag_24\n    /* \"#utility.yul\":1274:1281   */\n  dup10\n    /* \"#utility.yul\":1265:1271   */\n  dup3\n    /* \"#utility.yul\":1254:1263   */\n  dup11\n    /* \"#utility.yul\":1250:1272   */\n  add\n    /* \"#utility.yul\":1218:1282   */\n  tag_8\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":1208:1282   */\n  swap3\n  pop\n    /* \"#utility.yul\":1162:1292   */\n  pop\n    /* \"#utility.yul\":1331:1334   */\n  0xa0\n    /* \"#utility.yul\":1358:1422   */\n  tag_25\n    /* \"#utility.yul\":1414:1421   */\n  dup10\n    /* \"#utility.yul\":1405:1411   */\n  dup3\n    /* \"#utility.yul\":1394:1403   */\n  dup11\n    /* \"#utility.yul\":1390:1412   */\n  add\n    /* \"#utility.yul\":1358:1422   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":1348:1422   */\n  swap2\n  pop\n    /* \"#utility.yul\":1302:1432   */\n  pop\n    /* \"#utility.yul\":305:1439   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":1526:1622   */\ntag_28:\n    /* \"#utility.yul\":1563:1570   */\n  0x00\n    /* \"#utility.yul\":1592:1616   */\n  tag_30\n    /* \"#utility.yul\":1610:1615   */\n  dup3\n    /* \"#utility.yul\":1592:1616   */\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1581:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1526:1622   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1628:1754   */\ntag_31:\n    /* \"#utility.yul\":1665:1672   */\n  0x00\n    /* \"#utility.yul\":1705:1747   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1698:1703   */\n  dup3\n    /* \"#utility.yul\":1694:1748   */\n  and\n    /* \"#utility.yul\":1683:1748   */\n  swap1\n  pop\n    /* \"#utility.yul\":1628:1754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1760:1837   */\ntag_33:\n    /* \"#utility.yul\":1797:1804   */\n  0x00\n    /* \"#utility.yul\":1826:1831   */\n  dup2\n    /* \"#utility.yul\":1815:1831   */\n  swap1\n  pop\n    /* \"#utility.yul\":1760:1837   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1966:2083   */\ntag_19:\n    /* \"#utility.yul\":2075:2076   */\n  0x00\n    /* \"#utility.yul\":2072:2073   */\n  dup1\n    /* \"#utility.yul\":2065:2077   */\n  revert\n    /* \"#utility.yul\":2089:2211   */\ntag_11:\n    /* \"#utility.yul\":2162:2186   */\n  tag_39\n    /* \"#utility.yul\":2180:2185   */\n  dup2\n    /* \"#utility.yul\":2162:2186   */\n  tag_28\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":2155:2160   */\n  dup2\n    /* \"#utility.yul\":2152:2187   */\n  eq\n    /* \"#utility.yul\":2142:2205   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2201:2202   */\n  0x00\n    /* \"#utility.yul\":2198:2199   */\n  dup1\n    /* \"#utility.yul\":2191:2203   */\n  revert\n    /* \"#utility.yul\":2142:2205   */\ntag_40:\n    /* \"#utility.yul\":2089:2211   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2217:2339   */\ntag_15:\n    /* \"#utility.yul\":2290:2314   */\n  tag_42\n    /* \"#utility.yul\":2308:2313   */\n  dup2\n    /* \"#utility.yul\":2290:2314   */\n  tag_33\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":2283:2288   */\n  dup2\n    /* \"#utility.yul\":2280:2315   */\n  eq\n    /* \"#utility.yul\":2270:2333   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2329:2330   */\n  0x00\n    /* \"#utility.yul\":2326:2327   */\n  dup1\n    /* \"#utility.yul\":2319:2331   */\n  revert\n    /* \"#utility.yul\":2270:2333   */\ntag_43:\n    /* \"#utility.yul\":2217:2339   */\n  pop\n  jump\t// out\n    /* \"contracts/TokenSwap.sol\":89:1416  contract TokenSwap {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenSwap.sol\":89:1416  contract TokenSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8119c065\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TokenSwap.sol\":631:1151  function swap() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/TokenSwap.sol\":686:692  owner1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":672:692  msg.sender == owner1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":672:682  msg.sender */\n      caller\n        /* \"contracts/TokenSwap.sol\":672:692  msg.sender == owner1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TokenSwap.sol\":672:716  msg.sender == owner1 || msg.sender == owner2 */\n      dup1\n      tag_7\n      jumpi\n      pop\n        /* \"contracts/TokenSwap.sol\":710:716  owner2 */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":696:716  msg.sender == owner2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":696:706  msg.sender */\n      caller\n        /* \"contracts/TokenSwap.sol\":696:716  msg.sender == owner2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TokenSwap.sol\":672:716  msg.sender == owner1 || msg.sender == owner2 */\n    tag_7:\n        /* \"contracts/TokenSwap.sol\":664:735  require(msg.sender == owner1 || msg.sender == owner2, \"Not authorized\") */\n      tag_8\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_9\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_8:\n        /* \"contracts/TokenSwap.sol\":1034:1084  _safeTransferFrom(token1, owner1, owner2, amount1) */\n      tag_11\n        /* \"contracts/TokenSwap.sol\":1052:1058  token1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":1060:1066  owner1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":1068:1074  owner2 */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":1076:1083  amount1 */\n      sload(0x02)\n        /* \"contracts/TokenSwap.sol\":1034:1051  _safeTransferFrom */\n      tag_12\n        /* \"contracts/TokenSwap.sol\":1034:1084  _safeTransferFrom(token1, owner1, owner2, amount1) */\n      jump\t// in\n    tag_11:\n        /* \"contracts/TokenSwap.sol\":1094:1144  _safeTransferFrom(token2, owner2, owner1, amount2) */\n      tag_13\n        /* \"contracts/TokenSwap.sol\":1112:1118  token2 */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":1120:1126  owner2 */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":1128:1134  owner1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":1136:1143  amount2 */\n      sload(0x05)\n        /* \"contracts/TokenSwap.sol\":1094:1111  _safeTransferFrom */\n      tag_12\n        /* \"contracts/TokenSwap.sol\":1094:1144  _safeTransferFrom(token2, owner2, owner1, amount2) */\n      jump\t// in\n    tag_13:\n        /* \"contracts/TokenSwap.sol\":631:1151  function swap() public {... */\n      jump\t// out\n        /* \"contracts/TokenSwap.sol\":1157:1414  function _safeTransferFrom(... */\n    tag_12:\n        /* \"contracts/TokenSwap.sol\":1302:1311  bool sent */\n      0x00\n        /* \"contracts/TokenSwap.sol\":1314:1319  token */\n      dup5\n        /* \"contracts/TokenSwap.sol\":1314:1332  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/TokenSwap.sol\":1333:1339  sender */\n      dup6\n        /* \"contracts/TokenSwap.sol\":1341:1350  recipient */\n      dup6\n        /* \"contracts/TokenSwap.sol\":1352:1358  amount */\n      dup6\n        /* \"contracts/TokenSwap.sol\":1314:1359  token.transferFrom(sender, recipient, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"contracts/TokenSwap.sol\":1302:1359  bool sent = token.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/TokenSwap.sol\":1377:1381  sent */\n      dup1\n        /* \"contracts/TokenSwap.sol\":1369:1407  require(sent, \"Token transfer failed\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/TokenSwap.sol\":1292:1414  {... */\n      pop\n        /* \"contracts/TokenSwap.sol\":1157:1414  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_26:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_28\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:495   */\n    tag_21:\n        /* \"#utility.yul\":217:223   */\n      0x00\n        /* \"#utility.yul\":266:268   */\n      0x20\n        /* \"#utility.yul\":254:263   */\n      dup3\n        /* \"#utility.yul\":245:252   */\n      dup5\n        /* \"#utility.yul\":241:264   */\n      sub\n        /* \"#utility.yul\":237:269   */\n      slt\n        /* \"#utility.yul\":234:353   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":272:351   */\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":234:353   */\n    tag_31:\n        /* \"#utility.yul\":392:393   */\n      0x00\n        /* \"#utility.yul\":417:478   */\n      tag_34\n        /* \"#utility.yul\":470:477   */\n      dup5\n        /* \"#utility.yul\":461:467   */\n      dup3\n        /* \"#utility.yul\":450:459   */\n      dup6\n        /* \"#utility.yul\":446:468   */\n      add\n        /* \"#utility.yul\":417:478   */\n      tag_26\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":407:478   */\n      swap2\n      pop\n        /* \"#utility.yul\":363:488   */\n      pop\n        /* \"#utility.yul\":150:495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":501:619   */\n    tag_35:\n        /* \"#utility.yul\":588:612   */\n      tag_37\n        /* \"#utility.yul\":606:611   */\n      dup2\n        /* \"#utility.yul\":588:612   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":583:586   */\n      dup3\n        /* \"#utility.yul\":576:613   */\n      mstore\n        /* \"#utility.yul\":501:619   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":625:991   */\n    tag_39:\n        /* \"#utility.yul\":767:770   */\n      0x00\n        /* \"#utility.yul\":788:855   */\n      tag_41\n        /* \"#utility.yul\":852:854   */\n      0x15\n        /* \"#utility.yul\":847:850   */\n      dup4\n        /* \"#utility.yul\":788:855   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":781:855   */\n      swap2\n      pop\n        /* \"#utility.yul\":864:957   */\n      tag_43\n        /* \"#utility.yul\":953:956   */\n      dup3\n        /* \"#utility.yul\":864:957   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":982:984   */\n      0x20\n        /* \"#utility.yul\":977:980   */\n      dup3\n        /* \"#utility.yul\":973:985   */\n      add\n        /* \"#utility.yul\":966:985   */\n      swap1\n      pop\n        /* \"#utility.yul\":625:991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":997:1363   */\n    tag_45:\n        /* \"#utility.yul\":1139:1142   */\n      0x00\n        /* \"#utility.yul\":1160:1227   */\n      tag_47\n        /* \"#utility.yul\":1224:1226   */\n      0x0e\n        /* \"#utility.yul\":1219:1222   */\n      dup4\n        /* \"#utility.yul\":1160:1227   */\n      tag_42\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1153:1227   */\n      swap2\n      pop\n        /* \"#utility.yul\":1236:1329   */\n      tag_48\n        /* \"#utility.yul\":1325:1328   */\n      dup3\n        /* \"#utility.yul\":1236:1329   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1354:1356   */\n      0x20\n        /* \"#utility.yul\":1349:1352   */\n      dup3\n        /* \"#utility.yul\":1345:1357   */\n      add\n        /* \"#utility.yul\":1338:1357   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1369:1487   */\n    tag_50:\n        /* \"#utility.yul\":1456:1480   */\n      tag_52\n        /* \"#utility.yul\":1474:1479   */\n      dup2\n        /* \"#utility.yul\":1456:1480   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1451:1454   */\n      dup3\n        /* \"#utility.yul\":1444:1481   */\n      mstore\n        /* \"#utility.yul\":1369:1487   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1493:1935   */\n    tag_16:\n        /* \"#utility.yul\":1642:1646   */\n      0x00\n        /* \"#utility.yul\":1680:1682   */\n      0x60\n        /* \"#utility.yul\":1669:1678   */\n      dup3\n        /* \"#utility.yul\":1665:1683   */\n      add\n        /* \"#utility.yul\":1657:1683   */\n      swap1\n      pop\n        /* \"#utility.yul\":1693:1764   */\n      tag_55\n        /* \"#utility.yul\":1761:1762   */\n      0x00\n        /* \"#utility.yul\":1750:1759   */\n      dup4\n        /* \"#utility.yul\":1746:1763   */\n      add\n        /* \"#utility.yul\":1737:1743   */\n      dup7\n        /* \"#utility.yul\":1693:1764   */\n      tag_35\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1774:1846   */\n      tag_56\n        /* \"#utility.yul\":1842:1844   */\n      0x20\n        /* \"#utility.yul\":1831:1840   */\n      dup4\n        /* \"#utility.yul\":1827:1845   */\n      add\n        /* \"#utility.yul\":1818:1824   */\n      dup6\n        /* \"#utility.yul\":1774:1846   */\n      tag_35\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1856:1928   */\n      tag_57\n        /* \"#utility.yul\":1924:1926   */\n      0x40\n        /* \"#utility.yul\":1913:1922   */\n      dup4\n        /* \"#utility.yul\":1909:1927   */\n      add\n        /* \"#utility.yul\":1900:1906   */\n      dup5\n        /* \"#utility.yul\":1856:1928   */\n      tag_50\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1493:1935   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2360   */\n    tag_24:\n        /* \"#utility.yul\":2107:2111   */\n      0x00\n        /* \"#utility.yul\":2145:2147   */\n      0x20\n        /* \"#utility.yul\":2134:2143   */\n      dup3\n        /* \"#utility.yul\":2130:2148   */\n      add\n        /* \"#utility.yul\":2122:2148   */\n      swap1\n      pop\n        /* \"#utility.yul\":2194:2203   */\n      dup2\n        /* \"#utility.yul\":2188:2192   */\n      dup2\n        /* \"#utility.yul\":2184:2204   */\n      sub\n        /* \"#utility.yul\":2180:2181   */\n      0x00\n        /* \"#utility.yul\":2169:2178   */\n      dup4\n        /* \"#utility.yul\":2165:2182   */\n      add\n        /* \"#utility.yul\":2158:2205   */\n      mstore\n        /* \"#utility.yul\":2222:2353   */\n      tag_59\n        /* \"#utility.yul\":2348:2352   */\n      dup2\n        /* \"#utility.yul\":2222:2353   */\n      tag_39\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2214:2353   */\n      swap1\n      pop\n        /* \"#utility.yul\":1941:2360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2785   */\n    tag_10:\n        /* \"#utility.yul\":2532:2536   */\n      0x00\n        /* \"#utility.yul\":2570:2572   */\n      0x20\n        /* \"#utility.yul\":2559:2568   */\n      dup3\n        /* \"#utility.yul\":2555:2573   */\n      add\n        /* \"#utility.yul\":2547:2573   */\n      swap1\n      pop\n        /* \"#utility.yul\":2619:2628   */\n      dup2\n        /* \"#utility.yul\":2613:2617   */\n      dup2\n        /* \"#utility.yul\":2609:2629   */\n      sub\n        /* \"#utility.yul\":2605:2606   */\n      0x00\n        /* \"#utility.yul\":2594:2603   */\n      dup4\n        /* \"#utility.yul\":2590:2607   */\n      add\n        /* \"#utility.yul\":2583:2630   */\n      mstore\n        /* \"#utility.yul\":2647:2778   */\n      tag_61\n        /* \"#utility.yul\":2773:2777   */\n      dup2\n        /* \"#utility.yul\":2647:2778   */\n      tag_45\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2639:2778   */\n      swap1\n      pop\n        /* \"#utility.yul\":2366:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2872:3041   */\n    tag_42:\n        /* \"#utility.yul\":2956:2967   */\n      0x00\n        /* \"#utility.yul\":2990:2996   */\n      dup3\n        /* \"#utility.yul\":2985:2988   */\n      dup3\n        /* \"#utility.yul\":2978:2997   */\n      mstore\n        /* \"#utility.yul\":3030:3034   */\n      0x20\n        /* \"#utility.yul\":3025:3028   */\n      dup3\n        /* \"#utility.yul\":3021:3035   */\n      add\n        /* \"#utility.yul\":3006:3035   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:3041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3047:3143   */\n    tag_38:\n        /* \"#utility.yul\":3084:3091   */\n      0x00\n        /* \"#utility.yul\":3113:3137   */\n      tag_66\n        /* \"#utility.yul\":3131:3136   */\n      dup3\n        /* \"#utility.yul\":3113:3137   */\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":3102:3137   */\n      swap1\n      pop\n        /* \"#utility.yul\":3047:3143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3239   */\n    tag_68:\n        /* \"#utility.yul\":3183:3190   */\n      0x00\n        /* \"#utility.yul\":3226:3231   */\n      dup2\n        /* \"#utility.yul\":3219:3232   */\n      iszero\n        /* \"#utility.yul\":3212:3233   */\n      iszero\n        /* \"#utility.yul\":3201:3233   */\n      swap1\n      pop\n        /* \"#utility.yul\":3149:3239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3245:3371   */\n    tag_67:\n        /* \"#utility.yul\":3282:3289   */\n      0x00\n        /* \"#utility.yul\":3322:3364   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3315:3320   */\n      dup3\n        /* \"#utility.yul\":3311:3365   */\n      and\n        /* \"#utility.yul\":3300:3365   */\n      swap1\n      pop\n        /* \"#utility.yul\":3245:3371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3377:3454   */\n    tag_53:\n        /* \"#utility.yul\":3414:3421   */\n      0x00\n        /* \"#utility.yul\":3443:3448   */\n      dup2\n        /* \"#utility.yul\":3432:3448   */\n      swap1\n      pop\n        /* \"#utility.yul\":3377:3454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3583:3700   */\n    tag_33:\n        /* \"#utility.yul\":3692:3693   */\n      0x00\n        /* \"#utility.yul\":3689:3690   */\n      dup1\n        /* \"#utility.yul\":3682:3694   */\n      revert\n        /* \"#utility.yul\":3706:3877   */\n    tag_44:\n        /* \"#utility.yul\":3846:3869   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":3842:3843   */\n      0x00\n        /* \"#utility.yul\":3834:3840   */\n      dup3\n        /* \"#utility.yul\":3830:3844   */\n      add\n        /* \"#utility.yul\":3823:3870   */\n      mstore\n        /* \"#utility.yul\":3706:3877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4047   */\n    tag_49:\n        /* \"#utility.yul\":4023:4039   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":4019:4020   */\n      0x00\n        /* \"#utility.yul\":4011:4017   */\n      dup3\n        /* \"#utility.yul\":4007:4021   */\n      add\n        /* \"#utility.yul\":4000:4040   */\n      mstore\n        /* \"#utility.yul\":3883:4047   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4053:4169   */\n    tag_29:\n        /* \"#utility.yul\":4123:4144   */\n      tag_78\n        /* \"#utility.yul\":4138:4143   */\n      dup2\n        /* \"#utility.yul\":4123:4144   */\n      tag_68\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":4116:4121   */\n      dup2\n        /* \"#utility.yul\":4113:4145   */\n      eq\n        /* \"#utility.yul\":4103:4163   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":4159:4160   */\n      0x00\n        /* \"#utility.yul\":4156:4157   */\n      dup1\n        /* \"#utility.yul\":4149:4161   */\n      revert\n        /* \"#utility.yul\":4103:4163   */\n    tag_79:\n        /* \"#utility.yul\":4053:4169   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122083c7ea4f23203125f7ff19ef2e3629f3326a8324fcfeab6d5d4acb7aa58a08a364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_137": {
									"entryPoint": null,
									"id": 137,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2342:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:2",
														"type": ""
													}
												],
												"src": "156:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "467:972:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "514:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "516:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "516:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "516:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "488:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "497:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "484:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "484:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:3:2",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "480:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:33:2"
															},
															"nodeType": "YulIf",
															"src": "477:120:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "607:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "622:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "636:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "626:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "651:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "697:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "708:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "693:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "693:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "717:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "661:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "651:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "745:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "760:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "774:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "764:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "790:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "836:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "847:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "832:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "832:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "856:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "800:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "800:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "790:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "884:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "899:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "903:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "929:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "975:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "986:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "971:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "971:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "995:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "939:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "929:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1023:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1038:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1052:2:2",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1042:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1068:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1114:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1125:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1134:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1078:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1078:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1068:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1162:130:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1177:17:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1191:3:2",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1181:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1208:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1254:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1265:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1250:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1250:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1274:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1218:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1208:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1302:130:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1317:17:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1331:3:2",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1321:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1348:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1394:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1405:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1390:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1390:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1414:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1358:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "1348:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "397:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "408:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "420:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "428:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "436:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "444:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "452:6:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "460:6:2",
														"type": ""
													}
												],
												"src": "305:1134:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1485:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1495:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1511:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1505:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1505:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1495:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1478:6:2",
														"type": ""
													}
												],
												"src": "1445:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1571:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1581:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1592:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1581:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1553:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1563:7:2",
														"type": ""
													}
												],
												"src": "1526:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1673:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1683:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1698:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1694:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1683:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1655:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1665:7:2",
														"type": ""
													}
												],
												"src": "1628:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1805:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1815:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1826:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1815:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1787:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1797:7:2",
														"type": ""
													}
												],
												"src": "1760:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1949:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1942:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1843:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2055:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2072:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2075:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2065:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2065:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2065:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1966:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2132:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2189:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2201:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2191:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2191:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2191:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2155:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2180:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2162:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2152:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2152:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2145:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:43:2"
															},
															"nodeType": "YulIf",
															"src": "2142:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2125:5:2",
														"type": ""
													}
												],
												"src": "2089:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2260:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2317:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2326:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2329:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2319:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2319:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2319:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2283:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2308:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2290:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2290:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2280:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2280:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2273:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2273:43:2"
															},
															"nodeType": "YulIf",
															"src": "2270:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2253:5:2",
														"type": ""
													}
												],
												"src": "2217:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161078138038061078183398181016040528101906100329190610178565b856000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360028190555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600581905550505050505050610274565b60008151905061015d81610246565b92915050565b6000815190506101728161025d565b92915050565b60008060008060008060c0878903121561019557610194610241565b5b60006101a389828a0161014e565b96505060206101b489828a0161014e565b95505060406101c589828a01610163565b94505060606101d689828a0161014e565b93505060806101e789828a0161014e565b92505060a06101f889828a01610163565b9150509295509295509295565b600061021082610217565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61024f81610205565b811461025a57600080fd5b50565b61026681610237565b811461027157600080fd5b50565b6104fe806102836000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638119c06514610030575b600080fd5b61003861003a565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806100e35750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610122576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610119906103e1565b60405180910390fd5b61019460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025461020a565b610208600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660055461020a565b565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b81526004016102499392919061038a565b602060405180830381600087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029b91906102f9565b9050806102dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d4906103c1565b60405180910390fd5b5050505050565b6000815190506102f3816104b1565b92915050565b60006020828403121561030f5761030e61045a565b5b600061031d848285016102e4565b91505092915050565b61032f81610412565b82525050565b6000610342601583610401565b915061034d8261045f565b602082019050919050565b6000610365600e83610401565b915061037082610488565b602082019050919050565b61038481610450565b82525050565b600060608201905061039f6000830186610326565b6103ac6020830185610326565b6103b9604083018461037b565b949350505050565b600060208201905081810360008301526103da81610335565b9050919050565b600060208201905081810360008301526103fa81610358565b9050919050565b600082825260208201905092915050565b600061041d82610430565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6104ba81610424565b81146104c557600080fd5b5056fea264697066735822122083c7ea4f23203125f7ff19ef2e3629f3326a8324fcfeab6d5d4acb7aa58a08a364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x781 CODESIZE SUB DUP1 PUSH2 0x781 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x178 JUMP JUMPDEST DUP6 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP PUSH2 0x274 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15D DUP2 PUSH2 0x246 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x172 DUP2 PUSH2 0x25D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x195 JUMPI PUSH2 0x194 PUSH2 0x241 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3 DUP10 DUP3 DUP11 ADD PUSH2 0x14E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1B4 DUP10 DUP3 DUP11 ADD PUSH2 0x14E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x1C5 DUP10 DUP3 DUP11 ADD PUSH2 0x163 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1D6 DUP10 DUP3 DUP11 ADD PUSH2 0x14E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x1E7 DUP10 DUP3 DUP11 ADD PUSH2 0x14E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x1F8 DUP10 DUP3 DUP11 ADD PUSH2 0x163 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210 DUP3 PUSH2 0x217 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24F DUP2 PUSH2 0x205 JUMP JUMPDEST DUP2 EQ PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x266 DUP2 PUSH2 0x237 JUMP JUMPDEST DUP2 EQ PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4FE DUP1 PUSH2 0x283 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8119C065 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE3 JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x122 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119 SWAP1 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x194 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x208 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 SLOAD PUSH2 0x20A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x2F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D4 SWAP1 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F3 DUP2 PUSH2 0x4B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30F JUMPI PUSH2 0x30E PUSH2 0x45A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31D DUP5 DUP3 DUP6 ADD PUSH2 0x2E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x412 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342 PUSH1 0x15 DUP4 PUSH2 0x401 JUMP JUMPDEST SWAP2 POP PUSH2 0x34D DUP3 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 PUSH1 0xE DUP4 PUSH2 0x401 JUMP JUMPDEST SWAP2 POP PUSH2 0x370 DUP3 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x384 DUP2 PUSH2 0x450 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x39F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x3AC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x3B9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x37B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DA DUP2 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA DUP2 PUSH2 0x358 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D DUP3 PUSH2 0x430 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4BA DUP2 PUSH2 0x424 JUMP JUMPDEST DUP2 EQ PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xC7 0xEA 0x4F 0x23 KECCAK256 BALANCE 0x25 0xF7 SELFDESTRUCT NOT 0xEF 0x2E CALLDATASIZE 0x29 RETURN ORIGIN PUSH11 0x8324FCFEAB6D5D4ACB7AA5 DUP11 ADDMOD LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "89:1327:1:-:0;;;278:347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;468:7;452:6;;:24;;;;;;;;;;;;;;;;;;495:7;486:6;;:16;;;;;;;;;;;;;;;;;;522:8;512:7;:18;;;;556:7;540:6;;:24;;;;;;;;;;;;;;;;;;583:7;574:6;;:16;;;;;;;;;;;;;;;;;;610:8;600:7;:18;;;;278:347;;;;;;89:1327;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;156:143;;;;:::o;305:1134::-;420:6;428;436;444;452;460;509:3;497:9;488:7;484:23;480:33;477:120;;;516:79;;:::i;:::-;477:120;636:1;661:64;717:7;708:6;697:9;693:22;661:64;:::i;:::-;651:74;;607:128;774:2;800:64;856:7;847:6;836:9;832:22;800:64;:::i;:::-;790:74;;745:129;913:2;939:64;995:7;986:6;975:9;971:22;939:64;:::i;:::-;929:74;;884:129;1052:2;1078:64;1134:7;1125:6;1114:9;1110:22;1078:64;:::i;:::-;1068:74;;1023:129;1191:3;1218:64;1274:7;1265:6;1254:9;1250:22;1218:64;:::i;:::-;1208:74;;1162:130;1331:3;1358:64;1414:7;1405:6;1394:9;1390:22;1358:64;:::i;:::-;1348:74;;1302:130;305:1134;;;;;;;;:::o;1526:96::-;1563:7;1592:24;1610:5;1592:24;:::i;:::-;1581:35;;1526:96;;;:::o;1628:126::-;1665:7;1705:42;1698:5;1694:54;1683:65;;1628:126;;;:::o;1760:77::-;1797:7;1826:5;1815:16;;1760:77;;;:::o;1966:117::-;2075:1;2072;2065:12;2089:122;2162:24;2180:5;2162:24;:::i;:::-;2155:5;2152:35;2142:63;;2201:1;2198;2191:12;2142:63;2089:122;:::o;2217:::-;2290:24;2308:5;2290:24;:::i;:::-;2283:5;2280:35;2270:63;;2329:1;2326;2319:12;2270:63;2217:122;:::o;89:1327:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_safeTransferFrom_195": {
									"entryPoint": 522,
									"id": 195,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@swap_168": {
									"entryPoint": 58,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4172:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "272:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "272:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "272:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "245:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "254:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "241:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "266:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:32:2"
															},
															"nodeType": "YulIf",
															"src": "234:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "363:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "378:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "392:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "382:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "407:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "450:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "461:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "446:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "446:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "470:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "417:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "417:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "407:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "194:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "205:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "217:6:2",
														"type": ""
													}
												],
												"src": "150:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "566:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "583:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "606:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "588:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "588:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "576:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "576:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "554:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "561:3:2",
														"type": ""
													}
												],
												"src": "501:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "781:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "847:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:2",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "788:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "781:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nodeType": "YulIdentifier",
																	"src": "864:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "864:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "966:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "977:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "982:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "973:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "973:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "966:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "759:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "767:3:2",
														"type": ""
													}
												],
												"src": "625:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1143:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1153:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1219:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1224:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1160:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1153:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1325:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nodeType": "YulIdentifier",
																	"src": "1236:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1236:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1338:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1349:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1354:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1345:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1338:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1131:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1139:3:2",
														"type": ""
													}
												],
												"src": "997:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1434:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1451:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1474:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1456:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1444:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1422:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1429:3:2",
														"type": ""
													}
												],
												"src": "1369:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1647:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1657:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1669:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1680:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1665:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1657:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1737:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1750:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1761:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1746:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1693:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1693:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1818:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1842:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1774:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1774:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1900:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1913:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1924:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1909:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1909:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1856:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1856:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1856:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1615:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1623:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1631:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1642:4:2",
														"type": ""
													}
												],
												"src": "1493:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2112:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2122:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2134:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2145:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2130:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2122:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2169:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2180:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2165:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2165:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2188:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2194:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2158:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2214:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2348:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2222:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2214:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2092:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2107:4:2",
														"type": ""
													}
												],
												"src": "1941:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2537:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2547:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2570:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2555:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2555:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2547:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2594:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2605:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2590:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2590:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2613:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2609:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2609:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2639:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2773:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2647:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2647:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2639:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2517:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2532:4:2",
														"type": ""
													}
												],
												"src": "2366:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2831:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2841:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2857:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2851:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2824:6:2",
														"type": ""
													}
												],
												"src": "2791:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2985:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2990:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2978:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2978:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2978:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3006:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3025:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3030:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3021:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3006:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2940:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2945:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2956:11:2",
														"type": ""
													}
												],
												"src": "2872:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3092:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3102:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3131:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3113:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3102:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3074:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3084:7:2",
														"type": ""
													}
												],
												"src": "3047:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3191:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3201:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3226:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3219:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3219:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3212:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3212:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3201:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3173:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3183:7:2",
														"type": ""
													}
												],
												"src": "3149:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3290:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3300:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3315:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3322:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3311:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3311:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3300:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3272:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3282:7:2",
														"type": ""
													}
												],
												"src": "3245:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3422:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3432:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3443:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3432:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3404:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3414:7:2",
														"type": ""
													}
												],
												"src": "3377:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3549:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3566:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3569:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3559:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3559:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3460:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3672:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3692:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3682:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3682:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3583:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3812:65:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3834:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3830:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3830:14:2"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3846:23:2",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3823:47:2"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3804:6:2",
														"type": ""
													}
												],
												"src": "3706:171:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3989:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4011:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4019:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4007:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4007:14:2"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4023:16:2",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4000:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4000:40:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4000:40:2"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3981:6:2",
														"type": ""
													}
												],
												"src": "3883:164:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4093:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4147:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4156:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4159:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4149:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4149:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4149:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4116:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4138:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4123:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4123:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4113:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4113:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4106:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:40:2"
															},
															"nodeType": "YulIf",
															"src": "4103:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4086:5:2",
														"type": ""
													}
												],
												"src": "4053:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638119c06514610030575b600080fd5b61003861003a565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806100e35750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610122576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610119906103e1565b60405180910390fd5b61019460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025461020a565b610208600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660055461020a565b565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b81526004016102499392919061038a565b602060405180830381600087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029b91906102f9565b9050806102dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d4906103c1565b60405180910390fd5b5050505050565b6000815190506102f3816104b1565b92915050565b60006020828403121561030f5761030e61045a565b5b600061031d848285016102e4565b91505092915050565b61032f81610412565b82525050565b6000610342601583610401565b915061034d8261045f565b602082019050919050565b6000610365600e83610401565b915061037082610488565b602082019050919050565b61038481610450565b82525050565b600060608201905061039f6000830186610326565b6103ac6020830185610326565b6103b9604083018461037b565b949350505050565b600060208201905081810360008301526103da81610335565b9050919050565b600060208201905081810360008301526103fa81610358565b9050919050565b600082825260208201905092915050565b600061041d82610430565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6104ba81610424565b81146104c557600080fd5b5056fea264697066735822122083c7ea4f23203125f7ff19ef2e3629f3326a8324fcfeab6d5d4acb7aa58a08a364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8119C065 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE3 JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x122 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119 SWAP1 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x194 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x208 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 SLOAD PUSH2 0x20A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x2F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D4 SWAP1 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F3 DUP2 PUSH2 0x4B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30F JUMPI PUSH2 0x30E PUSH2 0x45A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31D DUP5 DUP3 DUP6 ADD PUSH2 0x2E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x412 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342 PUSH1 0x15 DUP4 PUSH2 0x401 JUMP JUMPDEST SWAP2 POP PUSH2 0x34D DUP3 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 PUSH1 0xE DUP4 PUSH2 0x401 JUMP JUMPDEST SWAP2 POP PUSH2 0x370 DUP3 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x384 DUP2 PUSH2 0x450 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x39F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x3AC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x3B9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x37B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DA DUP2 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA DUP2 PUSH2 0x358 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D DUP3 PUSH2 0x430 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4BA DUP2 PUSH2 0x424 JUMP JUMPDEST DUP2 EQ PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xC7 0xEA 0x4F 0x23 KECCAK256 BALANCE 0x25 0xF7 SELFDESTRUCT NOT 0xEF 0x2E CALLDATASIZE 0x29 RETURN ORIGIN PUSH11 0x8324FCFEAB6D5D4ACB7AA5 DUP11 ADDMOD LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "89:1327:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;631:520;;;:::i;:::-;;;686:6;;;;;;;;;;;672:20;;:10;:20;;;:44;;;;710:6;;;;;;;;;;;696:20;;:10;:20;;;672:44;664:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1034:50;1052:6;;;;;;;;;;1060;;;;;;;;;;;1068;;;;;;;;;;;1076:7;;1034:17;:50::i;:::-;1094;1112:6;;;;;;;;;;;1120;;;;;;;;;;;1128;;;;;;;;;;;1136:7;;1094:17;:50::i;:::-;631:520::o;1157:257::-;1302:9;1314:5;:18;;;1333:6;1341:9;1352:6;1314:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1302:57;;1377:4;1369:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1292:122;1157:257;;;;:::o;7:137:2:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:345::-;217:6;266:2;254:9;245:7;241:23;237:32;234:119;;;272:79;;:::i;:::-;234:119;392:1;417:61;470:7;461:6;450:9;446:22;417:61;:::i;:::-;407:71;;363:125;150:345;;;;:::o;501:118::-;588:24;606:5;588:24;:::i;:::-;583:3;576:37;501:118;;:::o;625:366::-;767:3;788:67;852:2;847:3;788:67;:::i;:::-;781:74;;864:93;953:3;864:93;:::i;:::-;982:2;977:3;973:12;966:19;;625:366;;;:::o;997:::-;1139:3;1160:67;1224:2;1219:3;1160:67;:::i;:::-;1153:74;;1236:93;1325:3;1236:93;:::i;:::-;1354:2;1349:3;1345:12;1338:19;;997:366;;;:::o;1369:118::-;1456:24;1474:5;1456:24;:::i;:::-;1451:3;1444:37;1369:118;;:::o;1493:442::-;1642:4;1680:2;1669:9;1665:18;1657:26;;1693:71;1761:1;1750:9;1746:17;1737:6;1693:71;:::i;:::-;1774:72;1842:2;1831:9;1827:18;1818:6;1774:72;:::i;:::-;1856;1924:2;1913:9;1909:18;1900:6;1856:72;:::i;:::-;1493:442;;;;;;:::o;1941:419::-;2107:4;2145:2;2134:9;2130:18;2122:26;;2194:9;2188:4;2184:20;2180:1;2169:9;2165:17;2158:47;2222:131;2348:4;2222:131;:::i;:::-;2214:139;;1941:419;;;:::o;2366:::-;2532:4;2570:2;2559:9;2555:18;2547:26;;2619:9;2613:4;2609:20;2605:1;2594:9;2590:17;2583:47;2647:131;2773:4;2647:131;:::i;:::-;2639:139;;2366:419;;;:::o;2872:169::-;2956:11;2990:6;2985:3;2978:19;3030:4;3025:3;3021:14;3006:29;;2872:169;;;;:::o;3047:96::-;3084:7;3113:24;3131:5;3113:24;:::i;:::-;3102:35;;3047:96;;;:::o;3149:90::-;3183:7;3226:5;3219:13;3212:21;3201:32;;3149:90;;;:::o;3245:126::-;3282:7;3322:42;3315:5;3311:54;3300:65;;3245:126;;;:::o;3377:77::-;3414:7;3443:5;3432:16;;3377:77;;;:::o;3583:117::-;3692:1;3689;3682:12;3706:171;3846:23;3842:1;3834:6;3830:14;3823:47;3706:171;:::o;3883:164::-;4023:16;4019:1;4011:6;4007:14;4000:40;3883:164;:::o;4053:116::-;4123:21;4138:5;4123:21;:::i;:::-;4116:5;4113:32;4103:60;;4159:1;4156;4149:12;4103:60;4053:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "255600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"swap()": "infinite"
							},
							"internal": {
								"_safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 89,
									"end": 1416,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 625,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 625,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 625,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 625,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 625,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 278,
									"end": 625,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 278,
									"end": 625,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 278,
									"end": 625,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 278,
									"end": 625,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 468,
									"end": 475,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 452,
									"end": 458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 452,
									"end": 458,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 452,
									"end": 476,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 452,
									"end": 476,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 452,
									"end": 476,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 452,
									"end": 476,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 495,
									"end": 502,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 486,
									"end": 492,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 486,
									"end": 492,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 486,
									"end": 502,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 486,
									"end": 502,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 486,
									"end": 502,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 502,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 522,
									"end": 530,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 512,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 512,
									"end": 530,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 512,
									"end": 530,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 512,
									"end": 530,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 512,
									"end": 530,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 556,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 540,
									"end": 546,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 540,
									"end": 546,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 583,
									"end": 590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 574,
									"end": 580,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 574,
									"end": 580,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 590,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 574,
									"end": 590,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 574,
									"end": 590,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 574,
									"end": 590,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 574,
									"end": 590,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 610,
									"end": 618,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 600,
									"end": 607,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 600,
									"end": 618,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 600,
									"end": 618,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 600,
									"end": 618,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 600,
									"end": 618,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 278,
									"end": 625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 213,
									"end": 218,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 156,
									"end": 299,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 299,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 299,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 299,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 420,
									"end": 426,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 434,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 436,
									"end": 442,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 444,
									"end": 450,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 452,
									"end": 458,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 466,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 509,
									"end": 512,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 497,
									"end": 506,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 488,
									"end": 495,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 484,
									"end": 507,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 480,
									"end": 513,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 477,
									"end": 597,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 477,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 477,
									"end": 597,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 516,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 516,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 516,
									"end": 595,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 516,
									"end": 595,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 516,
									"end": 595,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 477,
									"end": 597,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 477,
									"end": 597,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 636,
									"end": 637,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 661,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 717,
									"end": 724,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 708,
									"end": 714,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 697,
									"end": 706,
									"name": "DUP11",
									"source": 2
								},
								{
									"begin": 693,
									"end": 715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 661,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 661,
									"end": 725,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 661,
									"end": 725,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 661,
									"end": 725,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 651,
									"end": 725,
									"name": "SWAP7",
									"source": 2
								},
								{
									"begin": 651,
									"end": 725,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 607,
									"end": 735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 774,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 864,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 856,
									"end": 863,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 847,
									"end": 853,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 836,
									"end": 845,
									"name": "DUP11",
									"source": 2
								},
								{
									"begin": 832,
									"end": 854,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 800,
									"end": 864,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 800,
									"end": 864,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 864,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 800,
									"end": 864,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 790,
									"end": 864,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 790,
									"end": 864,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 745,
									"end": 874,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 913,
									"end": 915,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 939,
									"end": 1003,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 995,
									"end": 1002,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 986,
									"end": 992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 975,
									"end": 984,
									"name": "DUP11",
									"source": 2
								},
								{
									"begin": 971,
									"end": 993,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 939,
									"end": 1003,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 939,
									"end": 1003,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 939,
									"end": 1003,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 939,
									"end": 1003,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 929,
									"end": 1003,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 929,
									"end": 1003,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 884,
									"end": 1013,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1054,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1078,
									"end": 1142,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 1125,
									"end": 1131,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1114,
									"end": 1123,
									"name": "DUP11",
									"source": 2
								},
								{
									"begin": 1110,
									"end": 1132,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1078,
									"end": 1142,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1078,
									"end": 1142,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1078,
									"end": 1142,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1078,
									"end": 1142,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1068,
									"end": 1142,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1068,
									"end": 1142,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1023,
									"end": 1152,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1191,
									"end": 1194,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1218,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1274,
									"end": 1281,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 1271,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1254,
									"end": 1263,
									"name": "DUP11",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1272,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1218,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1218,
									"end": 1282,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1218,
									"end": 1282,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1218,
									"end": 1282,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1208,
									"end": 1282,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1208,
									"end": 1282,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1292,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1331,
									"end": 1334,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 1358,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1414,
									"end": 1421,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 1405,
									"end": 1411,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1394,
									"end": 1403,
									"name": "DUP11",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1412,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1358,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1358,
									"end": 1422,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1358,
									"end": 1422,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1358,
									"end": 1422,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1348,
									"end": 1422,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1348,
									"end": 1422,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1302,
									"end": 1432,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 305,
									"end": 1439,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1526,
									"end": 1622,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1526,
									"end": 1622,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1563,
									"end": 1570,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1592,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1610,
									"end": 1615,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1592,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1592,
									"end": 1616,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1592,
									"end": 1616,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1592,
									"end": 1616,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1581,
									"end": 1616,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1581,
									"end": 1616,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1526,
									"end": 1622,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1526,
									"end": 1622,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1526,
									"end": 1622,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1526,
									"end": 1622,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1628,
									"end": 1754,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1628,
									"end": 1754,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1665,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1705,
									"end": 1747,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1698,
									"end": 1703,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1694,
									"end": 1748,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1683,
									"end": 1748,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1683,
									"end": 1748,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1628,
									"end": 1754,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1628,
									"end": 1754,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1628,
									"end": 1754,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1628,
									"end": 1754,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1760,
									"end": 1837,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 1760,
									"end": 1837,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1797,
									"end": 1804,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1826,
									"end": 1831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1815,
									"end": 1831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1815,
									"end": 1831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1760,
									"end": 1837,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1760,
									"end": 1837,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1760,
									"end": 1837,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1760,
									"end": 1837,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1966,
									"end": 2083,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1966,
									"end": 2083,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2075,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2072,
									"end": 2073,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2077,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2089,
									"end": 2211,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2089,
									"end": 2211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2162,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 2180,
									"end": 2185,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2162,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 2162,
									"end": 2186,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2162,
									"end": 2186,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 2162,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2155,
									"end": 2160,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2152,
									"end": 2187,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 2142,
									"end": 2205,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2142,
									"end": 2205,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2201,
									"end": 2202,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2198,
									"end": 2199,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2191,
									"end": 2203,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2142,
									"end": 2205,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2142,
									"end": 2205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2089,
									"end": 2211,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2089,
									"end": 2211,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2217,
									"end": 2339,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2217,
									"end": 2339,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2290,
									"end": 2314,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 2308,
									"end": 2313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2290,
									"end": 2314,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 2290,
									"end": 2314,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2290,
									"end": 2314,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 2290,
									"end": 2314,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2283,
									"end": 2288,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2280,
									"end": 2315,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 2270,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 2270,
									"end": 2333,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2329,
									"end": 2330,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2326,
									"end": 2327,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2319,
									"end": 2331,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2270,
									"end": 2333,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 2270,
									"end": 2333,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2217,
									"end": 2339,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2217,
									"end": 2339,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 1416,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083c7ea4f23203125f7ff19ef2e3629f3326a8324fcfeab6d5d4acb7aa58a08a364736f6c63430008070033",
									".code": [
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "8119C065"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 89,
											"end": 1416,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 686,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 686,
											"end": 692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 686,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 672,
											"end": 682,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 672,
											"end": 692,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 672,
											"end": 716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 672,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 672,
											"end": 716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 672,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 710,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 710,
											"end": 716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 696,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 696,
											"end": 706,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 696,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 696,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 672,
											"end": 716,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 672,
											"end": 716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 664,
											"end": 735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 664,
											"end": 735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 664,
											"end": 735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 664,
											"end": 735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 664,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 664,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1076,
											"end": 1083,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1034,
											"end": 1084,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1084,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1034,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1136,
											"end": 1143,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1094,
											"end": 1144,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1144,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1094,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1151,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1157,
											"end": 1414,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1157,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1319,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1358,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1369,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 495,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 150,
											"end": 495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 217,
											"end": 223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 245,
											"end": 252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 241,
											"end": 264,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 237,
											"end": 269,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 234,
											"end": 353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 272,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 234,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 470,
											"end": 477,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 461,
											"end": 467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 450,
											"end": 459,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 446,
											"end": 468,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 417,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 407,
											"end": 478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 407,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 619,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 501,
											"end": 619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 588,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 606,
											"end": 611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 588,
											"end": 612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 588,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 576,
											"end": 613,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 501,
											"end": 619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 619,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 625,
											"end": 991,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 625,
											"end": 991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 852,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 847,
											"end": 850,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 788,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 788,
											"end": 855,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 788,
											"end": 855,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 788,
											"end": 855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 855,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 864,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 864,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 864,
											"end": 957,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 864,
											"end": 957,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 864,
											"end": 957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 980,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 973,
											"end": 985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 625,
											"end": 991,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 625,
											"end": 991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 625,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 625,
											"end": 991,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 997,
											"end": 1363,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 997,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1224,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 1219,
											"end": 1222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1160,
											"end": 1227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1160,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1160,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1325,
											"end": 1328,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1236,
											"end": 1329,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1329,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1236,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1356,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1352,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1363,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1369,
											"end": 1487,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1369,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1474,
											"end": 1479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1456,
											"end": 1480,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1456,
											"end": 1480,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1456,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1487,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1493,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1493,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1669,
											"end": 1678,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1761,
											"end": 1762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1759,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1743,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1693,
											"end": 1764,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1693,
											"end": 1764,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1693,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1774,
											"end": 1846,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1774,
											"end": 1846,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1774,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1924,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1922,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1856,
											"end": 1928,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1856,
											"end": 1928,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1856,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1935,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1935,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1935,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1941,
											"end": 2360,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1941,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2134,
											"end": 2143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2204,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2178,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2205,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2360,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2366,
											"end": 2785,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2366,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2536,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 2573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2629,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2773,
											"end": 2777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2647,
											"end": 2778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2647,
											"end": 2778,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2647,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2785,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2872,
											"end": 3041,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2872,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2956,
											"end": 2967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 2988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3035,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3035,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 3041,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 3041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 3041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 3041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 3041,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3131,
											"end": 3136,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3102,
											"end": 3137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3102,
											"end": 3137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3149,
											"end": 3239,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3149,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3183,
											"end": 3190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3231,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3232,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3212,
											"end": 3233,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3201,
											"end": 3233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3201,
											"end": 3233,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3239,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3245,
											"end": 3371,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3245,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3289,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3315,
											"end": 3320,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3311,
											"end": 3365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3245,
											"end": 3371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3245,
											"end": 3371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3245,
											"end": 3371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3245,
											"end": 3371,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3377,
											"end": 3454,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3377,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3432,
											"end": 3448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3432,
											"end": 3448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3377,
											"end": 3454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3377,
											"end": 3454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3377,
											"end": 3454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3377,
											"end": 3454,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3706,
											"end": 3877,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3706,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3869,
											"name": "PUSH",
											"source": 2,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 3842,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3830,
											"end": 3844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3870,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3706,
											"end": 3877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3706,
											"end": 3877,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3883,
											"end": 4047,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3883,
											"end": 4047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4023,
											"end": 4039,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 4019,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4017,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4047,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4053,
											"end": 4169,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4053,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4123,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4138,
											"end": 4143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4123,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4123,
											"end": 4144,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4123,
											"end": 4144,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4123,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4116,
											"end": 4121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4145,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4103,
											"end": 4163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4160,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4149,
											"end": 4161,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4163,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4103,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4169,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"swap()": "8119c065"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount2\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenSwap.sol\":\"TokenSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc02b4175e429ac125853db3fe5cf46b35c2d58af574dafcdf172e00e85b96399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dce449a83326a2978c63b15ecc1abc3c66f3fa873a3e132b959cc9fc13229f34\",\"dweb:/ipfs/QmcL6SYT8xisVFSK1zS926J24QyNK5Juf284CzuVehgcmZ\"]},\"contracts/TokenSwap.sol\":{\"keccak256\":\"0x0c952083903c4adb12e86fb92074569b353ba095003049729e2dda01bbf55efd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8babc9ac75c070d5b5d20556f2f459d2c1ba70fac002cb412985f339078a1abd\",\"dweb:/ipfs/QmPaZmB6u7tK2EcPCpFL4VrktofgD71SMSRKpEQZLaWFJi\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							76
						]
					},
					"id": 77,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "IERC20",
							"nameLocation": "76:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "90:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "170:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "181:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "207:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:9:0"
									},
									"scope": 76,
									"src": "161:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "222:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "308:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "326:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "318:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:17:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "358:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:9:0"
									},
									"scope": 76,
									"src": "299:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "373:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "596:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "613:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "605:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "632:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "624:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:35:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "658:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "658:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:6:0"
									},
									"scope": 76,
									"src": "587:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "670:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "948:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "966:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "958:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "981:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "973:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:32:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1013:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:9:0"
									},
									"scope": 76,
									"src": "939:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1028:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1684:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1700:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1692:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1709:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:33:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1743:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:6:0"
									},
									"scope": 76,
									"src": "1675:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1755:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2065:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2086:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2078:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2102:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2094:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2121:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2113:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:51:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2147:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2147:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:6:0"
									},
									"scope": 76,
									"src": "2056:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "2159:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 66,
									"name": "Transfer",
									"nameLocation": "2328:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2353:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2337:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2375:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2359:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2387:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2379:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2336:57:0"
									},
									"src": "2322:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2400:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 75,
									"name": "Approval",
									"nameLocation": "2559:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2584:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2568:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2607:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2591:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:63:0"
									},
									"src": "2553:78:0"
								}
							],
							"scope": 77,
							"src": "66:2567:0",
							"usedErrors": []
						}
					],
					"src": "32:2601:0"
				},
				"id": 0
			},
			"contracts/TokenSwap.sol": {
				"ast": {
					"absolutePath": "contracts/TokenSwap.sol",
					"exportedSymbols": {
						"IERC20": [
							76
						],
						"TokenSwap": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 78,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:1"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 79,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 77,
							"src": "65:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196
							],
							"name": "TokenSwap",
							"nameLocation": "98:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 82,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "130:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "115:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$76",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 81,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 80,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 76,
											"src": "115:6:1"
										},
										"referencedDeclaration": 76,
										"src": "115:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 84,
									"mutability": "mutable",
									"name": "owner1",
									"nameLocation": "158:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "142:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 83,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "142:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 86,
									"mutability": "mutable",
									"name": "amount1",
									"nameLocation": "183:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "170:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "170:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "token2",
									"nameLocation": "211:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "196:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$76",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 88,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 87,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 76,
											"src": "196:6:1"
										},
										"referencedDeclaration": 76,
										"src": "196:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "owner2",
									"nameLocation": "239:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "223:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 90,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "223:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 93,
									"mutability": "mutable",
									"name": "amount2",
									"nameLocation": "264:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "251:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 92,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "251:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "442:183:1",
										"statements": [
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 108,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "452:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$76",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 110,
																"name": "_token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 109,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "461:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$76_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "461:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$76",
															"typeString": "contract IERC20"
														}
													},
													"src": "452:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "452:24:1"
											},
											{
												"expression": {
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 114,
														"name": "owner1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "486:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 115,
														"name": "_owner1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "495:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "486:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "486:16:1"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "512:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "522:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "512:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "512:18:1"
											},
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 122,
														"name": "token2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "540:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$76",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 124,
																"name": "_token2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "556:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 123,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "549:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$76_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "549:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$76",
															"typeString": "contract IERC20"
														}
													},
													"src": "540:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "540:24:1"
											},
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 128,
														"name": "owner2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "574:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 129,
														"name": "_owner2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "583:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "574:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "574:16:1"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 132,
														"name": "amount2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "600:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "_amount2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "610:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "600:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "600:18:1"
											}
										]
									},
									"id": 137,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "307:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "299:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_owner1",
												"nameLocation": "332:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "324:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "324:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "354:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "349:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "349:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "_token2",
												"nameLocation": "380:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "372:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "_owner2",
												"nameLocation": "405:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "397:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_amount2",
												"nameLocation": "427:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "422:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "422:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "289:152:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:1"
									},
									"scope": 196,
									"src": "278:347:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "654:497:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 141,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "672:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "672:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 143,
																	"name": "owner1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "686:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "672:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 145,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "696:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "696:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 147,
																	"name": "owner2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "710:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "696:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "672:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "718:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "664:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "664:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "664:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1052:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 155,
															"name": "owner1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1060:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 156,
															"name": "owner2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1068:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1076:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 153,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1034:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$76_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1034:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1034:50:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1112:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 162,
															"name": "owner2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1120:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 163,
															"name": "owner1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1128:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 164,
															"name": "amount2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1136:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 160,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1094:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$76_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "1094:50:1"
											}
										]
									},
									"functionSelector": "8119c065",
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "640:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "644:2:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:0:1"
									},
									"scope": 196,
									"src": "631:520:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "1292:122:1",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "1307:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "1302:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 180,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1302:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"arguments": [
														{
															"id": 184,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1333:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "1341:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1352:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 182,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1314:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 57,
														"src": "1314:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1302:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 190,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "1377:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1383:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1369:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1369:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "1369:38:1"
											}
										]
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "1166:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1200:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1193:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$76",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 170,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 169,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 76,
														"src": "1193:6:1"
													},
													"referencedDeclaration": 76,
													"src": "1193:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1223:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1215:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1247:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1239:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1266:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1183:100:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1292:0:1"
									},
									"scope": 196,
									"src": "1157:257:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 197,
							"src": "89:1327:1",
							"usedErrors": []
						}
					],
					"src": "32:1384:1"
				},
				"id": 1
			}
		}
	}
}